{"version":3,"sources":["components/fidget.svg","ShitpostJS/xml-parser.js","ShitpostJS/shitpost.js","ShitpostJS/ShitpostSayer.js","ShitpostJS/index.js","utils/rand255.js","utils/colors.js","MakeAShitpost.js","ShitpostJS/FunnyOnes.js","components/ShitpostGold.js","components/DisplayShitpost.js","App.js","YoutubeApp.js","RedditApp.js","components/GATracker.js","RootRoute.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","xmlToJson","xml","obj","nodeType","attributes","length","j","attribute","item","nodeName","nodeValue","hasChildNodes","childNodes","i","push","old","ShitpostJS","submitToPastebin","_submitToPastebin","Object","asyncToGenerator","regenerator_default","a","mark","_callee","devKey","text","formData","maxTries","resp","url","wrap","_context","prev","next","abrupt","FormData","append","fetch","method","body","sent","timeout","status","stop","_x","_x2","apply","this","arguments","getPastebinShitpost","_getPastebinShitpost","_callee2","id","_context2","unescape","classicShitpost","concat","_x3","submitToGlotIo","_submitToGlotIo","_callee3","data","_context3","language","title","public","files","name","content","headers","Content-Type","Accept","JSON","stringify","Error","json","_x4","getGlotIoShitpost","_getGlotIoShitpost","_callee5","error","_context5","_ref","_callee4","_context4","t0","getRandomRedditShitpost","t1","call","_x6","map","multiPartFile","join","replace","trim","_x5","_getRandomRedditShitpost","_callee6","children","_context6","Math","floor","random","_x7","getVerySpecificRedditShitpost","_getVerySpecificRedditShitpost","_callee8","subredditId","postId","_args8","_context8","undefined","_ref2","_callee7","_context7","_x8","getYoutubeTranscriptShitpost","_getYoutubeTranscriptShitpost","_callee10","videoId","lang","textArr","_args10","_context10","_ref3","_callee9","_context9","DOMParser","parseFromString","x","_x9","getEmotionOfShitpost","_getEmotionOfShitpost","_callee11","_context11","_x10","ms","Promise","res","setTimeout","speechUtteranceChunker","utt","settings","callback","window","SpeechSynthesisUtterance","chunkLength","pattRegex","RegExp","chunkArr","offset","substring","match","chunk","newUtt","hasOwnProperty","onend","TEMP_UTT","speechSynthesis","speak","ShitpostSayer","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","fallback","state","Utterance","Synth","MeSpeak","isVoiceLoaded","loadVoice","require","isConfigLoaded","loadConfig","volume","onstart","utterance","amplitude","pitch","speed","variant","cancel","addEventListener","onbeforeunload","preShitpost","shitpost","emojiRegex","rate","min","max","split","francDetection","langs","where","franc","getVoices","filter","indexOf","success","guessLanguage","detect","code","Component","defaultProps","ShitpostCentral","central","ShitpostSpeech","speech","rand255","GColor","r","g","b","createClass","key","value","idealColorFunction","lightColor","darkColor","background","c","col","pow","changeLuminosity","color","percent","t","round","textAreaStyle","resize","boxSizing","width","padding","height","minHeight","fontSize","borderColor","borderRadius","borderTopLeftRadius","borderBottomRightRadius","margin","outline","RoundedSubmitButton","disabled","_ref$color","_ref$invertedColor","invertedColor","_ref$onClick","onClick","react_default","createElement","className","style","marginTop","backgroundColor","recaptchaRef","React","createRef","MemeMaker","textChange","setState","submit","then","disableTextArea","validateAndSubmit","current","execute","_this2","bgColor","document","toCSSColor","linkStyle","textAlign","react_router_dom","to","placeholder","onChange","e","target","es","ref","size","sitekey","MakeAShitpost_RoundedSubmitButton","funnies","software","software-response","reddit1","terran","unfortunately","confession","/r/druid","/yt/vsauce","ShitpostGold","_ref$show","show","DisplayShitpost","_ref$backgroundColor","_ref$shitpost","preStyle","whiteSpace","wordWrap","borderTopColor","borderTopWidth","borderTopStyle","paddingTop","src","Fidget","display","alt","App","_Component","preId","params","FunnyOnes","inherits","EntityParser","decode","lighterBg","darkerBg","shitpostBg","shitpostColor","ShitpostGold_ShitpostGold","DisplayShitpost_DisplayShitpost","position","bottom","right","href","index_es","icon","faGithubAlt","isFunnies","gold","slice","GAListener","history","GoogleAnalytics","initialize","debug","sendPageView","location","listen","set","page","pathname","search","pageview","withRouter","RedditRouter","react_router","path","component","RedditApp","YoutubeRouter","exact","YoutubeApp","RootRouter","GATracker","MakeAShitpost","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","ReactDOM","render","RootRoute","getElementById","URL","process","origin","response","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.4857e5e1.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/fidget.e9f2330a.svg\";","export default function xmlToJson(xml) {\n\n\t// Create the return object\n\tvar obj = {};\n\tif (xml.nodeType === 1) { // element\n\t\t// do attributes\n\t\tif (xml.attributes.length > 0) {\n\t\tobj[\"@attributes\"] = {};\n\t\t\tfor (var j = 0; j < xml.attributes.length; j++) {\n\t\t\t\tvar attribute = xml.attributes.item(j);\n\t\t\t\tobj[\"@attributes\"][attribute.nodeName] = attribute.nodeValue;\n\t\t\t}\n\t\t}\n\t} else if (xml.nodeType === 3) { // text\n\t\tobj = xml.nodeValue;\n\t}\n\n\t// do children\n\t// If just one text node inside\n\tif (xml.hasChildNodes() && xml.childNodes.length === 1 && xml.childNodes[0].nodeType === 3) {\n\t\tobj = xml.childNodes[0].nodeValue;\n\t}\n\telse if (xml.hasChildNodes()) {\n\t\tfor(var i = 0; i < xml.childNodes.length; i++) {\n\t\t\tvar item = xml.childNodes.item(i);\n\t\t\tvar nodeName = item.nodeName;\n\t\t\tif (typeof(obj[nodeName]) === \"undefined\") {\n\t\t\t\tobj[nodeName] = xmlToJson(item);\n\t\t\t} else {\n\t\t\t\tif (typeof(obj[nodeName].push) === \"undefined\") {\n\t\t\t\t\tvar old = obj[nodeName];\n\t\t\t\t\tobj[nodeName] = [];\n\t\t\t\t\tobj[nodeName].push(old);\n\t\t\t\t}\n\t\t\t\tobj[nodeName].push(xmlToJson(item));\n\t\t\t}\n\t\t}\n\t}\n\treturn obj;\n}","import xmlToJson from './xml-parser'\n\n/**\n * Shitpost.JS shitpost framework (omegaLUL)\n * Fuck Pastebin lmao\n */\nconst ShitpostJS = {\n  /**\n   * Deprecated because fuck pastebin\n   */\n  submitToPastebin: async (devKey, text) => {\n    if (!devKey || !text) return\n    let formData = new FormData();\n    formData.append('api_option', 'paste');\n    formData.append('api_dev_key', devKey);\n    formData.append('api_paste_private', 1)\n    formData.append('api_paste_code', text);\n    let maxTries = 3\n    do {\n      var resp = await fetch(\"https://cors-anywhere.herokuapp.com/https://pastebin.com/api/api_post.php\", {\n        method: 'POST',\n        body: formData\n      })\n      var url = await resp.text()\n      await timeout(500)\n    } while (resp.status !== 200 && (maxTries--) > 0)\n    return url\n  },\n  /**\n   * Deprecated because fuck pastebin\n   */\n  getPastebinShitpost: async (id) => {\n    if (!id) return unescape(classicShitpost)\n    const resp = await fetch(`https://cors.io/?https://pastebin.com/raw/${id}`)\n    const text = await resp.text()\n    if (resp.status !== 200) return unescape(classicShitpost)\n    return text\n  },\n  submitToGlotIo: async (text) => {\n    if (!text) return\n    const data = {\n      language: 'plaintext',\n      title: 'Loud Shitpost',\n      public: false,\n      files: [{\n        name: \"main.txt\",\n        content: `${text}`\n      }]\n    }\n    const resp = await fetch(\"https://snippets.glot.io/snippets\", {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'POST',\n      body: JSON.stringify(data)\n    })\n    if (resp.status !== 200) throw new Error(\"Glot.io's API might have changed. Please notify me :)\")\n    return (await resp.json()).id\n  },\n  getGlotIoShitpost: async (id) => {\n    const error = async (status) => {\n      return `${status} Your code failed. \\n\\n${await ShitpostJS.getRandomRedditShitpost()}`\n    }\n    try {\n      var resp = await fetch(`https://snippets.glot.io/snippets/${id}`)\n      var json = await resp.json()\n    } catch (e) { return await error(404) }\n    if (!json || !json.files) return await error(404)\n    return json.files.map(multiPartFile => multiPartFile.content).join('\\n').replace(/\\./g,'. ').replace(/\\s+/g, ' ').trim()\n  },\n  getRandomRedditShitpost: async (id) => {\n    const resp = await (await fetch(\"https://www.reddit.com/r/copypasta/.json\")).json()\n    const children = resp.data.children\n    do {\n      var text = children[Math.floor(Math.random() * children.length)][\"data\"][\"selftext\"]\n    } while (!text || text.replace(/\\s/g,'').length === 0)\n    return text.replace(/\\./g,'. ').replace(/\\s+/g, ' ').trim()\n  },\n  getVerySpecificRedditShitpost: async (subredditId='', postId='') => {\n    const error = async (status) => {\n      return `${status} Couldn't get Reddit post. \\n\\n${await ShitpostJS.getRandomRedditShitpost()}`\n    }\n    if (!(subredditId && postId)) return await error(404)\n    const resp = await fetch(`https://www.reddit.com/r/${subredditId}/${postId}/.json`)\n    const json = await resp.json()\n    if (resp.status !== 200) return await error(resp.status)\n    const children = json[0].data.children\n    const text = children[0][\"data\"][\"selftext\"]\n    return text.replace(/\\./g,'. ').replace(/\\s+/g, ' ').trim()\n  },\n  getYoutubeTranscriptShitpost: async (videoId, lang='en') => {\n    const error = async () => {\n      return `Sorry, couldn't get your Youtube shitpost. No transcript found probably. \\n\\n${await ShitpostJS.getRandomRedditShitpost()}`\n    }\n    const resp = await (await fetch(`https://video.google.com/timedtext?lang=${lang}&v=${videoId}`)).text()\n    const json = xmlToJson((new DOMParser()).parseFromString(resp, 'text/xml')) // hahaha the inefficiency but does it look like I care?\n    const textArr = (json['transcript']) ? json['transcript']['text'] : ''\n    if (!textArr) return await error()\n    return (textArr) ? textArr.map(x => x.replace(/\\./g,'. ').replace(/\\s+/g, ' ')).join(' ') : ''\n  },\n  /**\n   * Some novel ass technique that I fucking bullshitted in 4 hours (lmao undergrad projects)\n   * Disabled for now because I forgot to fucking cache the results.\n   */\n  getEmotionOfShitpost: async (text) => {\n    return\n    // try {\n    //   const json = await(await fetch(\"\", {\n    //     method: 'POST',\n    //     body: JSON.stringify({\n    //       text: text\n    //     })\n    //   })).json()\n    //   return json.documents[0].score\n    // } catch (e) { return `${e}` }\n  }\n}\n\nconst timeout = ms => new Promise(res => setTimeout(res, ms))\n\n/**\n * I've included a classic shitpost as a default\n */\nexport const classicShitpost = \"Not%20only%20is%20finding%20the%20global%20optimum%20of%20a%20path%20given%20elevation%20data%20online%20illegal%2C%20online%20forums%20often%20come%20with%20%u201Cbonus%u201D%20features%20in%20the%20form%20of%20nasty%20plagiarized%20code%20and%20academic%20integrity%20violations.%20Stay%20legal%20and%20stay%20safe%2C%20code%20it%20yourself%20or%20if%20you%20don%u2019t%20want%20to%20pay%20for%20tutors%20just%20get%20good%2C%20which%20is%20mostly%20compatible%20and%20also%20requires%20you%20to%20understand%20the%20code.%20Remember%20that%20there%20are%20cheaper%20alternatives%20like%20a%20Bachelors%20of%20Science%20which%20is%20an%20awesome%20deal%20as%20a%20commercially%20made%20Engineering%20degree%20can%20cost%20tens%20of%20thousands%20of%20dollars.\"\n\nexport default ShitpostJS","import { Component } from 'react'\nimport PropType from 'prop-types'\nimport MeSpeak from 'mespeak'\nimport franc from 'franc-min'\nimport { guessLanguage } from 'guesslanguage'\nimport langs from 'langs'\nimport emojiRegex from 'emoji-regex'\n\n/**\n * Fuck y'all mojis, they take too long to speak\n * @param {string} input\n */\nconst emojiStripper = (input) => {\n  return input.replace(emojiRegex(), '')\n};\n\nconst speechUtteranceChunker = function (utt, settings, callback) {\n  if (!(utt instanceof window.SpeechSynthesisUtterance)) { callback(false); return; }\n  settings = settings || {};\n  var chunkLength = (settings && settings.chunkLength) ? settings.chunkLength : 160;\n  var pattRegex = new RegExp('^.{' + Math.floor(chunkLength / 2) + ',' + chunkLength + '}[.!?,]{1}|^.{1,' + chunkLength + '}$|^.{1,' + chunkLength + '} ');\n  var txt = (settings && settings.offset !== undefined ? utt.text.substring(settings.offset) : utt.text);\n  var chunkArr = txt.match(pattRegex);\n\n  if (chunkArr && chunkArr[0] !== undefined && chunkArr[0].length > 2) {\n      var chunk = chunkArr[0];\n      var newUtt = new SpeechSynthesisUtterance(chunk.replace(/^\\./,''));\n      for (let x in utt) {\n        newUtt[\"lang\"] = utt[\"lang\"]\n        if (utt.hasOwnProperty(x) && x !== 'text') {\n            newUtt[x] = utt[x];\n        }\n      }\n      newUtt.onend = function () {\n          settings.offset = settings.offset || 0;\n          settings.offset += chunk.length - 1;\n          speechUtteranceChunker(utt, settings, callback);\n      }\n      window.TEMP_UTT= newUtt; //IMPORTANT!! Do not remove: Logging the object out fixes some onend firing issues.\n      //placing the speak invocation inside a callback fixes ordering and onend issues.\n      setTimeout(function () {\n          speechSynthesis.speak(newUtt);\n      }, 0);\n  } else {\n      //call once all text has been spoken...\n      if (callback !== undefined) {\n          callback(true);\n      }\n  }\n}\n\nexport default class ShitpostSayer extends Component {\n  constructor(props) {\n    super(props)\n    if (window.speechSynthesis && window.SpeechSynthesisUtterance && !props.fallback) {\n      this.state = {\n        Utterance: window.SpeechSynthesisUtterance,\n        Synth: window.speechSynthesis\n      }\n    } else {\n      if (!MeSpeak.isVoiceLoaded('en')) MeSpeak.loadVoice(require('mespeak/voices/en/en-us.json'))\n      if (!MeSpeak.isConfigLoaded()) MeSpeak.loadConfig(require('./mespeak_config.json'))\n      this.state = {\n        Utterance: function (text) {\n          return {\n              lang: 'en',\n              volume: 1.0,\n              onend: function () {},\n              onstart: function () {},\n              text: text\n          };\n        },\n        Synth: {\n          speak: (utterance) => {\n            MeSpeak.speak(utterance.text, { amplitude: 100, pitch: 50, speed: 175, variant: 'klatt' })\n          },\n          cancel: () => {\n            MeSpeak.stop();\n          }\n        }\n      }\n    }\n  }\n  componentDidMount() {\n    if (!window.addEventListener) {\n      window.onbeforeunload = function() {\n        window.speechSynthesis.cancel();\n      }\n    } else {\n      window.addEventListener(\"beforeunload\", function() {\n        window.speechSynthesis.cancel()\n      })\n    }\n  }\n  componentDidUpdate() {\n    const Synth = this.state.Synth\n    const Utterance = this.state.Utterance\n    if (!(Synth && Utterance)) return\n    Synth.cancel()\n    let preShitpost = (this.props.shitpost) ? emojiStripper(this.props.shitpost) : ''\n    let rate = Math.min(1.5, Math.max(1, preShitpost.split(' ').length/200))\n    //preShitpost = preShitpost.replace(\"\\\"\", \"\").split(/[)(.;](\\s+)/g).filter(x => x);\n    //preShitpost.forEach(shitpost => {\n    let shitpost = (preShitpost) ? preShitpost : 'hi'\n    const utterance = new Utterance(shitpost)\n    utterance.rate = rate\n    const francDetection = langs.where(\"3\", franc(shitpost))\n    if (francDetection) {\n      utterance.lang = Synth.getVoices().filter(x => x.lang.indexOf(francDetection[\"1\"]) !== -1).map(x => x.lang)[0]\n      speechUtteranceChunker(utterance, {}, (success) => {\n        if (!success) Synth.speak(utterance)\n      })\n    } else {\n      guessLanguage.detect(shitpost, (code) => {\n        utterance.lang = Synth.getVoices().filter(x => x.lang.indexOf(code) !== -1).map(x => x.lang)[0]\n        speechUtteranceChunker(utterance, {}, (success) => {\n          if (!success) Synth.speak(utterance)\n        })\n      })\n    }\n    //})\n  }\n  render() {\n    return null\n  }\n}\nShitpostSayer.defaultProps = {\n  shitpost: '',\n  fallback: false,\n}\nShitpostSayer.propTypes = {\n  shitpost: PropType.string,\n  fallback: PropType.bool,\n}","import central from './shitpost'\nimport speech from './ShitpostSayer'\n\nconst ShitpostAPI = {\n  ShitpostSpeech: speech,\n  ShitpostCentral: central\n}\nexport const ShitpostCentral = central\nexport const ShitpostSpeech = speech\nexport default ShitpostAPI","export const rand255 = () => Math.floor(Math.random() * 256);","// export const GColor = function(r,g,b) {\n//   return {r:r, g:g, b:b};\n// };\nexport class GColor {\n  constructor(r,g,b) {\n    this.r = (typeof r === 'undefined')?0:r;\n    this.g = (typeof g === 'undefined')?0:g;\n    this.b = (typeof b === 'undefined')?0:b;\n  }\n  toCSSColor() {\n    return `rgb(${this.r}, ${this.g}, ${this.b})`\n  }\n}\nexport const createColorRange = function(c1, c2) {\n  var colorList = [], tmpColor;\n  for (var i=0; i<255; i++) {\n      tmpColor = new GColor();\n      tmpColor.r = c1.r + ((i*(c2.r-c1.r))/255);\n      tmpColor.g = c1.g + ((i*(c2.g-c1.g))/255);\n      tmpColor.b = c1.b + ((i*(c2.b-c1.b))/255);\n      colorList.push(tmpColor);\n  }\n  return colorList;\n}\n/**\n * W3C recommendations light VS dark function\n * I fucking love curry\n * @param {GColor} lightColor \n * @param {GColor} darkColor\n */\nexport const idealColorFunction = (lightColor, darkColor) => (background) => {\n  let {r,g,b} = background;\n  let uicolors = [r / 255, g / 255, b / 255];\n  let c = uicolors.map((col) => {\n    if (col <= 0.03928) {\n      return col / 12.92;\n    }\n    return Math.pow((col + 0.055) / 1.055, 2.4);\n  });\n  let L = (0.2126 * c[0]) + (0.7152 * c[1]) + (0.0722 * c[2]);\n  return (L > 0.179) ? darkColor : lightColor;\n}\nexport const changeLuminosity = (color, percent) => {\n  const {r,g,b}=color,t=percent<0?0:255,p=percent<0?percent*-1:percent;\n  return new GColor(Math.round((t-r)*p)+r,Math.round((t-g)*p)+g,Math.round((t-b)*p)+b);\n}","import React, { Component } from 'react';\nimport { ShitpostCentral } from './ShitpostJS'\nimport { Link } from 'react-router-dom'\nimport { rand255 } from \"./utils/rand255\";\nimport { GColor, idealColorFunction, changeLuminosity } from './utils/colors'\nimport { ShitpostSpeech } from './ShitpostJS'\nimport ReCAPTCHA from 'react-google-recaptcha'\n\nimport './App.css';\nimport './RoundedSubmitButton.css'\n\nconst textAreaStyle = {\n  resize: 'vertical',\n  boxSizing: 'border-box',\n  width: '100%',\n  padding: 10,\n  height: 200,\n  minHeight: 200,\n  fontSize: 16,\n  borderColor: '#aaa',\n  borderRadius: 20,\n  borderTopLeftRadius: 0,\n  borderBottomRightRadius: 0,\n  margin: 0,\n  outline: 0\n}\n\nconst RoundedSubmitButton = ({ disabled, color='black', invertedColor='white', onClick=()=>{} }) => {\n  return (\n    <button\n    disabled={disabled}\n    className=\"RoundedSubmitButton\"\n    style={{ marginTop: 5, color: invertedColor, backgroundColor: color, borderColor: color }}\n    onClick={onClick}>Submit</button>\n  )\n}\n\nconst reCAPTCHAKey = '6LeFDHEUAAAAAAlVeMaEwP1epvbYaqx5aSk6EWUv'\n\nconst recaptchaRef = React.createRef();\n\nexport default class MemeMaker extends Component {\n  constructor() {\n    super()\n    const color = new GColor(0, 0, 0)\n    this.state = {\n      text: '',\n      url: '',\n      backgroundColor: color,\n      disableTextArea: false\n    }\n  }\n\n  componentDidMount() {\n    window.speechSynthesis && window.speechSynthesis.cancel()\n    let color = new GColor(rand255(), rand255(), rand255())\n    this.setState({ backgroundColor: color })\n  }\n\n  textChange = (text) => {\n    this.setState({ text: text })\n  }\n  \n  submit = () => {\n    ShitpostCentral.submitToGlotIo(this.state.text).then(x => {\n      if (!x) return\n      this.setState({ url: '/' + x, disableTextArea: true })\n    })\n  }\n\n  validateAndSubmit = () => {\n    const text = this.state.text\n    // need to add support for reddit and youtube URLs in future\n    if (!text || !text.trim()) return\n    recaptchaRef.current.execute()\n  }\n\n  render() {\n    const bgColor = this.state.backgroundColor\n    const color = changeLuminosity(bgColor, -0.4)\n    document.body.style.backgroundColor = bgColor.toCSSColor()\n    const invertedColor = idealColorFunction(new GColor(255, 255, 255), color)(bgColor)\n    const linkStyle = {\n      fontSize: '1.4em',\n      color: color.toCSSColor(),\n      width: '100%'\n    }    \n    return (\n      <div className=\"ShitpostContainer\">\n        <div className=\"ShitpostCentre\" style={{ textAlign: 'center' }}>\n          <div style={{ borderRadius: 15, padding: '25px 40px', backgroundColor: '#eee' }}>\n            <div style={{ textAlign: 'left' }}><Link style={linkStyle} to=\"/\">&lt; Back to Shitposts</Link></div>\n            <h1 style={{ color: bgColor.toCSSColor() }}>Generate some fucking shitposts</h1>\n            <textarea disabled={this.state.disableTextArea} style={textAreaStyle} placeholder=\"YOUR SHITPOST HERE\" onChange={(e) => this.textChange(e.target.value)} />\n            <ReCAPTCHA\n              ref={recaptchaRef}\n              size=\"invisible\"\n              sitekey={reCAPTCHAKey}\n              onChange={this.submit}\n            />\n            <RoundedSubmitButton disabled={this.state.disableTextArea} color={bgColor.toCSSColor()} invertedColor={invertedColor.toCSSColor()} onClick={this.validateAndSubmit} />\n            {(this.state.url) ? <div style={{ padding: 10 }}><Link style={linkStyle} to={this.state.url}>Here's your link!</Link></div> : <div></div>}\n          </div>\n        </div>\n        <ShitpostSpeech />\n      </div>\n    )\n  }\n}","/**\n * A collection of funnies, by me\n */\nconst funnies = {\n  'software': 'f4kd2xgdy7',\n  'software-response': 'f4kdx6sp8b',\n  'reddit1': 'f4ke6f08ou',\n  'terran': 'f4kmkyen9a',\n  'unfortunately': 'f4o11lb97a',\n  'confession': 'f4vb5pgsbp',\n  '/r/druid': 'hearthstonecirclejerk/9h1o9j',\n  '/yt/vsauce': 'L45Q1_psDqk'\n}\nexport default funnies","import React from 'react';\n/**\n * Shitpost Gold banner\n * @param { id } ID a matching identifier\n */\nexport const ShitpostGold = ({ id, show=false }) => {\n  if (show)\n    return (<span className=\"corner-banner\"><span>Shitpost Gold&trade; certified</span></span>);\n  else\n    return null;\n};","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Fidget from './fidget.svg';\nimport './fidget.css';\n\nexport const DisplayShitpost = ({ color = 'black', backgroundColor='#eee', shitpost = '' }) => {\n  const preStyle = { color: color, fontSize: '2em', margin: 0, whiteSpace: 'pre-wrap', wordWrap: 'break-word' };\n  const linkStyle = { color: color, fontSize: '1.5em', margin: 0 };\n  return (<div className=\"ShitpostContainer\">\n    <div className=\"ShitpostCentre\">\n      {(shitpost) ?\n        <div style={{ borderRadius: 15, padding: '25px 40px', backgroundColor: backgroundColor }}>\n          <pre style={preStyle} id=\"content\">{shitpost}</pre>\n          <div style={{ textAlign: 'center', marginTop: 20, borderTopColor: color, borderTopWidth: 1, borderTopStyle: 'solid', paddingTop: 10 }}>\n            <Link style={linkStyle} to=\"/make-a-shitpost\">Make your own</Link>\n          </div>\n        </div>\n        :\n        <div style={{ textAlign: 'center' }}>\n          <img className=\"fidget\" src={Fidget} style={{ display: 'inline', width: '10em', height: '10em' }} alt=\"Fidget spinner loader\" />\n          <h1 style={{ color: backgroundColor }}>Loading...</h1>\n        </div>}\n    </div>\n  </div>);\n};","import React, { Component } from 'react';\nimport { ShitpostCentral, ShitpostSpeech } from './ShitpostJS';\nimport FunnyOnes from './ShitpostJS/FunnyOnes';\nimport { GColor, idealColorFunction, changeLuminosity } from './utils/colors';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faGithubAlt } from '@fortawesome/free-brands-svg-icons';\nimport { rand255 } from './utils/rand255';\nimport { ShitpostGold } from \"./components/ShitpostGold\";\nimport { DisplayShitpost } from \"./components/DisplayShitpost\";\nimport EntityParser from 'he'\n\nimport './App.css';\n\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n    const preId = props.match.params.id;\n    const id = (FunnyOnes.hasOwnProperty(preId)) ? FunnyOnes[preId] : preId;\n    const color = new GColor(0, 0, 0);\n    this.state = {\n      id: id,\n      shitpost: '',\n      backgroundColor: color\n    };\n  }\n  componentDidMount() {\n    if (!this.state.id)\n      ShitpostCentral.getRandomRedditShitpost().then(x => this.setState({ \n        shitpost: EntityParser.decode(EntityParser.decode(x)) // reddit does a shit job at managing html entities\n      }));\n    else\n      ShitpostCentral.getGlotIoShitpost(this.state.id).then(x => {\n        this.setState({ shitpost: x });\n      });\n    this.setState({ backgroundColor: new GColor(rand255(), rand255(), rand255()) });\n  }\n  render() {\n    const shitpost = this.state.shitpost\n    const bgColor = this.state.backgroundColor\n    const lighterBg = changeLuminosity(bgColor, 0.7)\n    const darkerBg = changeLuminosity(bgColor, -0.6)\n    const shitpostBg = idealColorFunction(lighterBg, darkerBg)(bgColor)\n    const shitpostColor = idealColorFunction(new GColor(255, 255, 255), new GColor(0, 0, 0))(shitpostBg)\n    document.body.style.backgroundColor = bgColor.toCSSColor()\n    return (<div>\n      <ShitpostGold id={this.props.match.params.id} show={FunnyOnes[this.props.match.params.id]} />\n      <DisplayShitpost color={shitpostColor.toCSSColor()} backgroundColor={shitpostBg.toCSSColor()} shitpost={shitpost} />\n      <div className=\"social-btns\" style={{ position: 'fixed', bottom: 0, right: 0 }}>\n        <a className=\"btn github\" href=\"https://github.com/shitpostloudly/shitpostloudly.github.io\"><FontAwesomeIcon className=\"fa\" icon={faGithubAlt} /></a>\n      </div>\n      <ShitpostSpeech shitpost={shitpost} />\n    </div>);\n  }\n}","import React, { Component } from 'react';\nimport { ShitpostCentral, ShitpostSpeech } from './ShitpostJS';\nimport FunnyOnes from './ShitpostJS/FunnyOnes';\nimport { GColor, idealColorFunction, changeLuminosity } from './utils/colors';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faGithubAlt } from '@fortawesome/free-brands-svg-icons';\nimport { rand255 } from './utils/rand255';\nimport { ShitpostGold } from \"./components/ShitpostGold\";\nimport { DisplayShitpost } from \"./components/DisplayShitpost\";\nimport EntityParser from 'he'\n\nimport './App.css';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    const params = props.match.params\n    const isFunnies = (FunnyOnes.hasOwnProperty(props.match.url))\n    const id = (isFunnies) ? FunnyOnes[props.match.url] : params.id;\n    const color = new GColor(0, 0, 0);\n    this.state = {\n      id: id,\n      gold: isFunnies,\n      shitpost: '',\n      backgroundColor: color\n    };\n  }\n  componentDidMount() {\n    if (!this.state.id)\n      this.setState({ \n        shitpost: 'Random Youtube videos not supported at the moment. This is a great shitpost, right?'\n      })\n    else\n      ShitpostCentral.getYoutubeTranscriptShitpost(this.state.id).then(x => {\n        this.setState({ shitpost: EntityParser.decode(x) });\n      });\n    this.setState({ backgroundColor: new GColor(rand255(), rand255(), rand255()) });\n  }\n  render() {\n    const shitpost = this.state.shitpost\n    const bgColor = this.state.backgroundColor\n    const lighterBg = changeLuminosity(bgColor, 0.7)\n    const darkerBg = changeLuminosity(bgColor, -0.6)\n    const shitpostBg = idealColorFunction(lighterBg, darkerBg)(bgColor)\n    const shitpostColor = idealColorFunction(new GColor(255, 255, 255), new GColor(0, 0, 0))(shitpostBg)\n    document.body.style.backgroundColor = bgColor.toCSSColor()\n    return (<div>\n      <ShitpostGold show={this.state.gold} />\n      <DisplayShitpost color={shitpostColor.toCSSColor()} backgroundColor={shitpostBg.toCSSColor()} shitpost={shitpost} />\n      <div className=\"social-btns\" style={{ position: 'fixed', bottom: 0, right: 0 }}>\n        <a className=\"btn github\" href=\"https://github.com/shitpostloudly/shitpostloudly.github.io\"><FontAwesomeIcon className=\"fa\" icon={faGithubAlt} /></a>\n      </div>\n      <ShitpostSpeech shitpost={shitpost} />\n    </div>);\n  }\n}","import React, { Component } from 'react';\nimport { ShitpostCentral, ShitpostSpeech } from './ShitpostJS';\nimport FunnyOnes from './ShitpostJS/FunnyOnes';\nimport { GColor, idealColorFunction, changeLuminosity } from './utils/colors';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faGithubAlt } from '@fortawesome/free-brands-svg-icons';\nimport { rand255 } from './utils/rand255';\nimport { ShitpostGold } from \"./components/ShitpostGold\";\nimport { DisplayShitpost } from \"./components/DisplayShitpost\";\nimport EntityParser from 'he'\n\nimport './App.css';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    const params = props.match.params\n    const isFunnies = (FunnyOnes.hasOwnProperty(props.match.url))\n    const id = (isFunnies) ? FunnyOnes[props.match.url].split('/').slice(-2) : [params.subredditId, params.postId];\n    const color = new GColor(0, 0, 0);\n    this.state = {\n      id: id,\n      gold: isFunnies,\n      shitpost: '',\n      backgroundColor: color\n    };\n  }\n  componentDidMount() {\n    ShitpostCentral.getVerySpecificRedditShitpost(this.state.id[0], this.state.id[1]).then(x => this.setState({ \n      shitpost: EntityParser.decode(EntityParser.decode(x)), // reddit does a shit job at managing html entities\n      backgroundColor: new GColor(rand255(), rand255(), rand255())\n    }));\n  }\n  render() {\n    const shitpost = this.state.shitpost\n    const bgColor = this.state.backgroundColor\n    const lighterBg = changeLuminosity(bgColor, 0.7)\n    const darkerBg = changeLuminosity(bgColor, -0.6)\n    const shitpostBg = idealColorFunction(lighterBg, darkerBg)(bgColor)\n    const shitpostColor = idealColorFunction(new GColor(255, 255, 255), new GColor(0, 0, 0))(shitpostBg)\n    document.body.style.backgroundColor = bgColor.toCSSColor()\n    return (<div>\n      <ShitpostGold show={this.state.gold} />\n      <DisplayShitpost color={shitpostColor.toCSSColor()} backgroundColor={shitpostBg.toCSSColor()} shitpost={shitpost} />\n      <div className=\"social-btns\" style={{ position: 'fixed', bottom: 0, right: 0 }}>\n        <a className=\"btn github\" href=\"https://github.com/shitpostloudly/shitpostloudly.github.io\"><FontAwesomeIcon className=\"fa\" icon={faGithubAlt} /></a>\n      </div>\n      <ShitpostSpeech shitpost={shitpost} />\n    </div>);\n  }\n}","import PropTypes from 'prop-types';\nimport React from 'react';\nimport GoogleAnalytics from 'react-ga';\nimport { withRouter } from 'react-router';\n\nclass GAListener extends React.Component {\n  static propTypes = {\n    match: PropTypes.object.isRequired,\n    location: PropTypes.object.isRequired,\n    history: PropTypes.object.isRequired\n  };\n\n  componentDidMount() {\n    const { history } = this.props;\n    GoogleAnalytics.initialize('UA-125467783-1', { debug: false });\n    this.sendPageView(history.location);\n    history.listen(this.sendPageView);\n  }\n\n  sendPageView(location) {\n    GoogleAnalytics.set({ page: location.pathname+location.search });\n    GoogleAnalytics.pageview(location.pathname+location.search);\n  }\n\n  render() {\n    return this.props.children;\n  }\n}\n\nexport default withRouter(GAListener);","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\n\nimport MakeAShitpost from './MakeAShitpost'\n\nimport { App } from './App';\nimport YoutubeApp from './YoutubeApp'\nimport RedditApp from './RedditApp'\nimport GATracker from './components/GATracker'\n\nconst RootRouter = () => {\n  return (\n    <Router>\n      <GATracker>\n        <Switch>\n          <Route path='/r' component={RedditRouter} />\n          <Route path='/yt' component={YoutubeRouter} />\n          <Route path='/make-a-shitpost' component={MakeAShitpost} />\n          <Route path='/:id' component={App} />\n          <Route component={App} />\n        </Switch>\n      </GATracker>\n    </Router>\n  )\n}\n\nconst RedditRouter = ({ match }) => {\n  return (\n    <Switch>\n      <Route path={`${match.url}/:subredditId/comments/:postId`} component={RedditApp} />\n      <Route path={`${match.url}/:subredditId/:postId`} component={RedditApp} />\n      <Route path={`${match.url}/:id`} component={RedditApp} />\n    </Switch>\n  )\n}\n\nconst YoutubeRouter = ({ match }) => {\n  return (\n  <Switch>\n    <Route exact path={`${match.url}/:id`} component={YoutubeApp} />\n    <Route exact path={`${match.url}/`} component={YoutubeApp} />\n  </Switch>\n  )\n}\n\nexport default RootRouter;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport RouteRoute from './RootRoute';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<RouteRoute />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}