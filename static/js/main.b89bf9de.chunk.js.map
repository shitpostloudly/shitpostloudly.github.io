{"version":3,"sources":["components/fidget.svg","ShitpostJS/xml-parser.js","ShitpostJS/shitpost.js","ShitpostJS/ShitpostSayer.js","ShitpostJS/index.js","utils/rand255.js","utils/colors.js","MakeAShitpost.js","ShitpostJS/FunnyOnes.js","components/ShitpostGold.js","components/DisplayShitpost.js","App.js","YoutubeApp.js","RedditApp.js","components/GATracker.js","RootRoute.js","registerServiceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","xmlToJson","xml","obj","nodeType","attributes","length","j","attribute","item","nodeName","nodeValue","hasChildNodes","childNodes","i","push","old","ShitpostJS","submitToPastebin","_submitToPastebin","Object","asyncToGenerator","regenerator_default","a","mark","_callee","devKey","text","formData","maxTries","resp","url","wrap","_context","prev","next","abrupt","FormData","append","fetch","method","body","sent","timeout","status","stop","this","_x","_x2","apply","arguments","getPastebinShitpost","_getPastebinShitpost","_callee2","id","_context2","unescape","classicShitpost","concat","_x3","submitToGlotIo","_submitToGlotIo","_callee3","data","_context3","language","title","public","files","name","content","headers","Content-Type","Accept","JSON","stringify","Error","json","_x4","getGlotIoShitpost","_getGlotIoShitpost","_callee5","error","_context5","_ref","_callee4","_context4","t0","getRandomRedditShitpost","t1","call","_x6","map","multiPartFile","join","replace","trim","_x5","_getRandomRedditShitpost","_callee6","children","_context6","Math","floor","random","_x7","getVerySpecificRedditShitpost","_getVerySpecificRedditShitpost","_callee8","subredditId","postId","_args8","_context8","undefined","_ref2","_callee7","_context7","_x8","getYoutubeTranscriptShitpost","_getYoutubeTranscriptShitpost","_callee10","videoId","lang","textArr","_args10","_context10","_ref3","_callee9","_context9","DOMParser","parseFromString","x","_x9","getEmotionOfShitpost","_getEmotionOfShitpost","_callee11","_context11","_x10","ms","Promise","res","setTimeout","emojiStripper","input","emojiRegex","ShitpostSayer","props","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","sayShitpost","_this$state","state","Synth","Utterance","playing","shitpost","weirdRand","setState","utterance","window","rate","min","max","split","onend","francDetection","langs","where","franc","speak","guessLanguage","detect","code","console","log","speechSynthesis","SpeechSynthesisUtterance","fallback","MeSpeak","isVoiceLoaded","loadVoice","require","isConfigLoaded","loadConfig","volume","onstart","amplitude","pitch","speed","variant","cancel","addEventListener","onbeforeunload","react_default","createElement","style","cursor","onClick","Component","defaultProps","ShitpostCentral","central","ShitpostSpeech","speech","rand255","GColor","r","g","b","createClass","key","value","idealColorFunction","lightColor","darkColor","background","c","col","pow","changeLuminosity","color","percent","t","round","textAreaStyle","resize","boxSizing","width","padding","height","minHeight","fontSize","borderColor","borderRadius","borderTopLeftRadius","borderBottomRightRadius","margin","outline","RoundedSubmitButton","disabled","_ref$color","_ref$invertedColor","invertedColor","_ref$onClick","className","marginTop","backgroundColor","recaptchaRef","React","createRef","MemeMaker","textChange","submit","then","disableTextArea","validateAndSubmit","current","execute","_this2","bgColor","document","toCSSColor","linkStyle","textAlign","Link","to","placeholder","onChange","e","target","es","ref","size","sitekey","MakeAShitpost_RoundedSubmitButton","funnies","software","software-response","reddit1","terran","unfortunately","confession","/r/druid","/yt/vsauce","ShitpostGold","_ref$show","show","DisplayShitpost","_ref$backgroundColor","_ref$shitpost","preStyle","whiteSpace","wordWrap","borderTopColor","borderTopWidth","borderTopStyle","paddingTop","src","Fidget","display","alt","App","_Component","preId","match","params","FunnyOnes","hasOwnProperty","inherits","EntityParser","decode","lighterBg","darkerBg","shitpostBg","shitpostColor","ShitpostGold_ShitpostGold","DisplayShitpost_DisplayShitpost","position","bottom","right","href","index_es","icon","faGithubAlt","isFunnies","gold","slice","GAListener","GoogleAnalytics","initialize","debug","sendPageView","context","router","history","location","listen","set","page","pathname","search","pageview","contextTypes","PropTypes","object","RedditRouter","Switch","Route","path","component","RedditApp","YoutubeRouter","exact","YoutubeApp","RootRouter","BrowserRouter","GATracker_GAListener","MakeAShitpost","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ReactDOM","render","RootRoute","getElementById","URL","process","origin","response","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.b89bf9de.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/fidget.55c3516c.svg\";","export default function xmlToJson(xml) {\r\n\r\n\t// Create the return object\r\n\tvar obj = {};\r\n\tif (xml.nodeType === 1) { // element\r\n\t\t// do attributes\r\n\t\tif (xml.attributes.length > 0) {\r\n\t\tobj[\"@attributes\"] = {};\r\n\t\t\tfor (var j = 0; j < xml.attributes.length; j++) {\r\n\t\t\t\tvar attribute = xml.attributes.item(j);\r\n\t\t\t\tobj[\"@attributes\"][attribute.nodeName] = attribute.nodeValue;\r\n\t\t\t}\r\n\t\t}\r\n\t} else if (xml.nodeType === 3) { // text\r\n\t\tobj = xml.nodeValue;\r\n\t}\r\n\r\n\t// do children\r\n\t// If just one text node inside\r\n\tif (xml.hasChildNodes() && xml.childNodes.length === 1 && xml.childNodes[0].nodeType === 3) {\r\n\t\tobj = xml.childNodes[0].nodeValue;\r\n\t}\r\n\telse if (xml.hasChildNodes()) {\r\n\t\tfor(var i = 0; i < xml.childNodes.length; i++) {\r\n\t\t\tvar item = xml.childNodes.item(i);\r\n\t\t\tvar nodeName = item.nodeName;\r\n\t\t\tif (typeof(obj[nodeName]) === \"undefined\") {\r\n\t\t\t\tobj[nodeName] = xmlToJson(item);\r\n\t\t\t} else {\r\n\t\t\t\tif (typeof(obj[nodeName].push) === \"undefined\") {\r\n\t\t\t\t\tvar old = obj[nodeName];\r\n\t\t\t\t\tobj[nodeName] = [];\r\n\t\t\t\t\tobj[nodeName].push(old);\r\n\t\t\t\t}\r\n\t\t\t\tobj[nodeName].push(xmlToJson(item));\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\treturn obj;\r\n}","import xmlToJson from './xml-parser'\r\n\r\n/**\r\n * Shitpost.JS shitpost framework (omegaLUL)\r\n * Fuck Pastebin lmao\r\n */\r\nconst ShitpostJS = {\r\n  /**\r\n   * Deprecated because fuck pastebin\r\n   */\r\n  submitToPastebin: async (devKey, text) => {\r\n    if (!devKey || !text) return\r\n    let formData = new FormData();\r\n    formData.append('api_option', 'paste');\r\n    formData.append('api_dev_key', devKey);\r\n    formData.append('api_paste_private', 1)\r\n    formData.append('api_paste_code', text);\r\n    let maxTries = 3\r\n    do {\r\n      var resp = await fetch(\"https://cors-anywhere.herokuapp.com/https://pastebin.com/api/api_post.php\", {\r\n        method: 'POST',\r\n        body: formData\r\n      })\r\n      var url = await resp.text()\r\n      await timeout(500)\r\n    } while (resp.status !== 200 && (maxTries--) > 0)\r\n    return url\r\n  },\r\n  /**\r\n   * Deprecated because fuck pastebin\r\n   */\r\n  getPastebinShitpost: async (id) => {\r\n    if (!id) return unescape(classicShitpost)\r\n    const resp = await fetch(`https://cors.io/?https://pastebin.com/raw/${id}`)\r\n    const text = await resp.text()\r\n    if (resp.status !== 200) return unescape(classicShitpost)\r\n    return text\r\n  },\r\n  submitToGlotIo: async (text) => {\r\n    if (!text) return\r\n    const data = {\r\n      language: 'plaintext',\r\n      title: 'Loud Shitpost',\r\n      public: false,\r\n      files: [{\r\n        name: \"main.txt\",\r\n        content: `${text}`\r\n      }]\r\n    }\r\n    const resp = await fetch(\"https://snippets.glot.io/snippets\", {\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Accept': 'application/json'\r\n      },\r\n      method: 'POST',\r\n      body: JSON.stringify(data)\r\n    })\r\n    if (resp.status !== 200) throw new Error(\"Glot.io's API might have changed. Please notify me :)\")\r\n    return (await resp.json()).id\r\n  },\r\n  getGlotIoShitpost: async (id) => {\r\n    const error = async (status) => {\r\n      return `${status} Your code failed. \\n\\n${await ShitpostJS.getRandomRedditShitpost()}`\r\n    }\r\n    try {\r\n      var resp = await fetch(`https://snippets.glot.io/snippets/${id}`)\r\n      var json = await resp.json()\r\n    } catch (e) { return await error(404) }\r\n    if (!json || !json.files) return await error(404)\r\n    return json.files.map(multiPartFile => multiPartFile.content).join('\\n').replace(/\\./g,'. ').replace(/\\s+/g, ' ').trim()\r\n  },\r\n  getRandomRedditShitpost: async (id) => {\r\n    const resp = await (await fetch(\"https://www.reddit.com/r/copypasta/.json\")).json()\r\n    const children = resp.data.children\r\n    do {\r\n      var text = children[Math.floor(Math.random() * children.length)][\"data\"][\"selftext\"]\r\n    } while (!text || text.replace(/\\s/g,'').length === 0)\r\n    return text.replace(/\\./g,'. ').replace(/\\s+/g, ' ').trim()\r\n  },\r\n  getVerySpecificRedditShitpost: async (subredditId='', postId='') => {\r\n    const error = async (status) => {\r\n      return `${status} Couldn't get Reddit post. \\n\\n${await ShitpostJS.getRandomRedditShitpost()}`\r\n    }\r\n    if (!(subredditId && postId)) return await error(404)\r\n    const resp = await fetch(`https://www.reddit.com/r/${subredditId}/${postId}/.json`)\r\n    const json = await resp.json()\r\n    if (resp.status !== 200) return await error(resp.status)\r\n    const children = json[0].data.children\r\n    const text = children[0][\"data\"][\"selftext\"]\r\n    return text.replace(/\\./g,'. ').replace(/\\s+/g, ' ').trim()\r\n  },\r\n  getYoutubeTranscriptShitpost: async (videoId, lang='en') => {\r\n    const error = async () => {\r\n      return `Sorry, couldn't get your Youtube shitpost. No transcript found probably. \\n\\n${await ShitpostJS.getRandomRedditShitpost()}`\r\n    }\r\n    const resp = await (await fetch(`https://video.google.com/timedtext?lang=${lang}&v=${videoId}`)).text()\r\n    const json = xmlToJson((new DOMParser()).parseFromString(resp, 'text/xml')) // hahaha the inefficiency but does it look like I care?\r\n    const textArr = (json['transcript']) ? json['transcript']['text'] : ''\r\n    if (!textArr) return await error()\r\n    return (textArr) ? textArr.map(x => x.replace(/\\./g,'. ').replace(/\\s+/g, ' ')).join(' ') : ''\r\n  },\r\n  /**\r\n   * Some novel ass technique that I fucking bullshitted in 4 hours (lmao undergrad projects)\r\n   * Disabled for now because I forgot to fucking cache the results.\r\n   */\r\n  getEmotionOfShitpost: async (text) => {\r\n    return\r\n    // try {\r\n    //   const json = await(await fetch(\"\", {\r\n    //     method: 'POST',\r\n    //     body: JSON.stringify({\r\n    //       text: text\r\n    //     })\r\n    //   })).json()\r\n    //   return json.documents[0].score\r\n    // } catch (e) { return `${e}` }\r\n  }\r\n}\r\n\r\nconst timeout = ms => new Promise(res => setTimeout(res, ms))\r\n\r\n/**\r\n * I've included a classic shitpost as a default\r\n */\r\nexport const classicShitpost = \"Not%20only%20is%20finding%20the%20global%20optimum%20of%20a%20path%20given%20elevation%20data%20online%20illegal%2C%20online%20forums%20often%20come%20with%20%u201Cbonus%u201D%20features%20in%20the%20form%20of%20nasty%20plagiarized%20code%20and%20academic%20integrity%20violations.%20Stay%20legal%20and%20stay%20safe%2C%20code%20it%20yourself%20or%20if%20you%20don%u2019t%20want%20to%20pay%20for%20tutors%20just%20get%20good%2C%20which%20is%20mostly%20compatible%20and%20also%20requires%20you%20to%20understand%20the%20code.%20Remember%20that%20there%20are%20cheaper%20alternatives%20like%20a%20Bachelors%20of%20Science%20which%20is%20an%20awesome%20deal%20as%20a%20commercially%20made%20Engineering%20degree%20can%20cost%20tens%20of%20thousands%20of%20dollars.\"\r\n\r\nexport default ShitpostJS","import React, { Component } from 'react'\r\nimport PropType from 'prop-types'\r\nimport MeSpeak from 'mespeak'\r\nimport franc from 'franc-min'\r\nimport { guessLanguage } from 'guesslanguage'\r\nimport langs from 'langs'\r\nimport emojiRegex from 'emoji-regex'\r\n\r\n/**\r\n * Fuck y'all mojis, they take too long to speak\r\n * @param {string} input\r\n */\r\nconst emojiStripper = (input) => {\r\n  return input.replace(emojiRegex(), '')\r\n};\r\n\r\nexport default class ShitpostSayer extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    if (window.speechSynthesis && window.SpeechSynthesisUtterance && !props.fallback) {\r\n      this.state = {\r\n        Utterance: window.SpeechSynthesisUtterance,\r\n        Synth: window.speechSynthesis\r\n      }\r\n    } else {\r\n      if (!MeSpeak.isVoiceLoaded('en')) MeSpeak.loadVoice(require('mespeak/voices/en/en-us.json'))\r\n      if (!MeSpeak.isConfigLoaded()) MeSpeak.loadConfig(require('./mespeak_config.json'))\r\n      this.state = {\r\n        Utterance: function (text) {\r\n          return {\r\n              lang: 'en',\r\n              volume: 1.0,\r\n              onend: function () {},\r\n              onstart: function () {},\r\n              text: text\r\n          };\r\n        },\r\n        Synth: {\r\n          speak: (utterance) => {\r\n            MeSpeak.speak(utterance.text, { amplitude: 100, pitch: 50, speed: 175, variant: 'klatt' })\r\n          },\r\n          cancel: () => {\r\n            MeSpeak.stop();\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n  componentDidMount() {\r\n    if (!window.addEventListener) {\r\n      window.onbeforeunload = function() {\r\n        window.speechSynthesis.cancel();\r\n      }\r\n    } else {\r\n      window.addEventListener(\"beforeunload\", function() {\r\n        window.speechSynthesis.cancel()\r\n      })\r\n    }\r\n  }\r\n  sayShitpost = () => {\r\n    const { Synth, Utterance, playing } = this.state\r\n    if (!(Synth && Utterance) || playing || !this.props.shitpost) return\r\n    const weirdRand = Math.random() + 1\r\n    this.setState({ playing: weirdRand }, () => {\r\n      if (this.state.playing !== weirdRand) {\r\n        console.log('Couldn\\'t acquire lock', weirdRand)\r\n        return\r\n      }\r\n      const shitpost = (this.props.shitpost) ? emojiStripper(this.props.shitpost) : ''\r\n      const utterance = new Utterance(shitpost)\r\n      window.utterance = utterance\r\n      utterance.rate = Math.min(1.5, Math.max(1, shitpost.split(' ').length/200))\r\n      utterance.onend = () => void this.setState({ playing: false })\r\n      const francDetection = langs.where(\"3\", franc(shitpost))\r\n      if (francDetection) {\r\n        utterance.lang = francDetection\r\n        Synth.speak(utterance)\r\n      } else {\r\n        guessLanguage.detect(shitpost, (code) => {\r\n          utterance.lang = code\r\n          Synth.speak(utterance)\r\n        })\r\n      }\r\n    })\r\n  }\r\n  render() {\r\n    return <div style={{ cursor: 'pointer' }} onClick={this.sayShitpost}>{this.props.children}</div>\r\n  }\r\n}\r\nShitpostSayer.defaultProps = {\r\n  shitpost: '',\r\n  fallback: false,\r\n}\r\nShitpostSayer.propTypes = {\r\n  shitpost: PropType.string,\r\n  fallback: PropType.bool,\r\n}","import central from './shitpost'\r\nimport speech from './ShitpostSayer'\r\n\r\nconst ShitpostAPI = {\r\n  ShitpostSpeech: speech,\r\n  ShitpostCentral: central\r\n}\r\nexport const ShitpostCentral = central\r\nexport const ShitpostSpeech = speech\r\nexport default ShitpostAPI","export const rand255 = () => Math.floor(Math.random() * 256);","// export const GColor = function(r,g,b) {\r\n//   return {r:r, g:g, b:b};\r\n// };\r\nexport class GColor {\r\n  constructor(r,g,b) {\r\n    this.r = (typeof r === 'undefined')?0:r;\r\n    this.g = (typeof g === 'undefined')?0:g;\r\n    this.b = (typeof b === 'undefined')?0:b;\r\n  }\r\n  toCSSColor() {\r\n    return `rgb(${this.r}, ${this.g}, ${this.b})`\r\n  }\r\n}\r\nexport const createColorRange = function(c1, c2) {\r\n  var colorList = [], tmpColor;\r\n  for (var i=0; i<255; i++) {\r\n      tmpColor = new GColor();\r\n      tmpColor.r = c1.r + ((i*(c2.r-c1.r))/255);\r\n      tmpColor.g = c1.g + ((i*(c2.g-c1.g))/255);\r\n      tmpColor.b = c1.b + ((i*(c2.b-c1.b))/255);\r\n      colorList.push(tmpColor);\r\n  }\r\n  return colorList;\r\n}\r\n/**\r\n * W3C recommendations light VS dark function\r\n * I fucking love curry\r\n * @param {GColor} lightColor \r\n * @param {GColor} darkColor\r\n */\r\nexport const idealColorFunction = (lightColor, darkColor) => (background) => {\r\n  let {r,g,b} = background;\r\n  let uicolors = [r / 255, g / 255, b / 255];\r\n  let c = uicolors.map((col) => {\r\n    if (col <= 0.03928) {\r\n      return col / 12.92;\r\n    }\r\n    return Math.pow((col + 0.055) / 1.055, 2.4);\r\n  });\r\n  let L = (0.2126 * c[0]) + (0.7152 * c[1]) + (0.0722 * c[2]);\r\n  return (L > 0.179) ? darkColor : lightColor;\r\n}\r\nexport const changeLuminosity = (color, percent) => {\r\n  const {r,g,b}=color,t=percent<0?0:255,p=percent<0?percent*-1:percent;\r\n  return new GColor(Math.round((t-r)*p)+r,Math.round((t-g)*p)+g,Math.round((t-b)*p)+b);\r\n}","import React, { Component } from 'react';\r\nimport { ShitpostCentral } from './ShitpostJS'\r\nimport { Link } from 'react-router-dom'\r\nimport { rand255 } from \"./utils/rand255\";\r\nimport { GColor, idealColorFunction, changeLuminosity } from './utils/colors'\r\nimport ReCAPTCHA from 'react-google-recaptcha'\r\n\r\nimport './App.css';\r\nimport './RoundedSubmitButton.css'\r\n\r\nconst textAreaStyle = {\r\n  resize: 'vertical',\r\n  boxSizing: 'border-box',\r\n  width: '100%',\r\n  padding: 10,\r\n  height: 200,\r\n  minHeight: 200,\r\n  fontSize: 16,\r\n  borderColor: '#aaa',\r\n  borderRadius: 20,\r\n  borderTopLeftRadius: 0,\r\n  borderBottomRightRadius: 0,\r\n  margin: 0,\r\n  outline: 0\r\n}\r\n\r\nconst RoundedSubmitButton = ({ disabled, color='black', invertedColor='white', onClick=()=>{} }) => {\r\n  return (\r\n    <button\r\n    disabled={disabled}\r\n    className=\"RoundedSubmitButton\"\r\n    style={{ marginTop: 5, color: invertedColor, backgroundColor: color, borderColor: color }}\r\n    onClick={onClick}>Submit</button>\r\n  )\r\n}\r\n\r\nconst reCAPTCHAKey = '6LeFDHEUAAAAAAlVeMaEwP1epvbYaqx5aSk6EWUv'\r\n\r\nconst recaptchaRef = React.createRef();\r\n\r\nexport default class MemeMaker extends Component {\r\n  constructor() {\r\n    super()\r\n    const color = new GColor(0, 0, 0)\r\n    this.state = {\r\n      text: '',\r\n      url: '',\r\n      backgroundColor: color,\r\n      disableTextArea: false\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.speechSynthesis && window.speechSynthesis.cancel()\r\n    let color = new GColor(rand255(), rand255(), rand255())\r\n    this.setState({ backgroundColor: color })\r\n  }\r\n\r\n  textChange = (text) => {\r\n    this.setState({ text: text })\r\n  }\r\n  \r\n  submit = () => {\r\n    ShitpostCentral.submitToGlotIo(this.state.text).then(x => {\r\n      if (!x) return\r\n      this.setState({ url: '/' + x, disableTextArea: true })\r\n    })\r\n  }\r\n\r\n  validateAndSubmit = () => {\r\n    const text = this.state.text\r\n    // need to add support for reddit and youtube URLs in future\r\n    if (!text || !text.trim()) return\r\n    recaptchaRef.current.execute()\r\n  }\r\n\r\n  render() {\r\n    const bgColor = this.state.backgroundColor\r\n    const color = changeLuminosity(bgColor, -0.4)\r\n    document.body.style.backgroundColor = bgColor.toCSSColor()\r\n    const invertedColor = idealColorFunction(new GColor(255, 255, 255), color)(bgColor)\r\n    const linkStyle = {\r\n      fontSize: '1.4em',\r\n      color: color.toCSSColor(),\r\n      width: '100%'\r\n    }    \r\n    return (\r\n      <div className=\"ShitpostContainer\">\r\n        <div className=\"ShitpostCentre\" style={{ textAlign: 'center' }}>\r\n          <div style={{ borderRadius: 15, padding: '25px 40px', backgroundColor: '#eee' }}>\r\n            <div style={{ textAlign: 'left' }}><Link style={linkStyle} to=\"/\">&lt; Back to Shitposts</Link></div>\r\n            <h1 style={{ color: bgColor.toCSSColor() }}>Generate some fucking shitposts</h1>\r\n            <textarea disabled={this.state.disableTextArea} style={textAreaStyle} placeholder=\"YOUR SHITPOST HERE\" onChange={(e) => this.textChange(e.target.value)} />\r\n            <ReCAPTCHA\r\n              ref={recaptchaRef}\r\n              size=\"invisible\"\r\n              sitekey={reCAPTCHAKey}\r\n              onChange={this.submit}\r\n            />\r\n            <RoundedSubmitButton disabled={this.state.disableTextArea} color={bgColor.toCSSColor()} invertedColor={invertedColor.toCSSColor()} onClick={this.validateAndSubmit} />\r\n            {(this.state.url) ? <div style={{ padding: 10 }}><Link style={linkStyle} to={this.state.url}>Here's your link!</Link></div> : <div></div>}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}","/**\r\n * A collection of funnies, by me\r\n */\r\nconst funnies = {\r\n  'software': 'f4kd2xgdy7',\r\n  'software-response': 'f4kdx6sp8b',\r\n  'reddit1': 'f4ke6f08ou',\r\n  'terran': 'f4kmkyen9a',\r\n  'unfortunately': 'f4o11lb97a',\r\n  'confession': 'f4vb5pgsbp',\r\n  '/r/druid': 'hearthstonecirclejerk/9h1o9j',\r\n  '/yt/vsauce': 'L45Q1_psDqk'\r\n}\r\nexport default funnies","import React from 'react';\r\n/**\r\n * Shitpost Gold banner\r\n * @param { id } ID a matching identifier\r\n */\r\nexport const ShitpostGold = ({ id, show=false }) => {\r\n  if (show)\r\n    return (<span className=\"corner-banner\"><span>Shitpost Gold&trade; certified</span></span>);\r\n  else\r\n    return null;\r\n};","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Fidget from './fidget.svg';\r\nimport { ShitpostSpeech } from '../ShitpostJS';\r\nimport './fidget.css';\r\n\r\nexport const DisplayShitpost = ({ color = 'black', backgroundColor='#eee', shitpost = '' }) => {\r\n  const preStyle = { color: color, fontSize: '2em', margin: 0, whiteSpace: 'pre-wrap', wordWrap: 'break-word' };\r\n  const linkStyle = { color: color, fontSize: '1.5em', margin: 0 };\r\n  return (<div className=\"ShitpostContainer\">\r\n    <ShitpostSpeech shitpost={shitpost}>\r\n      <div className=\"ShitpostCentre\">\r\n        {(shitpost) ?\r\n          <div style={{ borderRadius: 15, padding: '25px 40px', backgroundColor: backgroundColor }}>\r\n            <pre style={preStyle} id=\"content\">{shitpost}</pre>\r\n            <div style={{ textAlign: 'center', marginTop: 20, borderTopColor: color, borderTopWidth: 1, borderTopStyle: 'solid', paddingTop: 10 }}>\r\n              <Link style={linkStyle} to=\"/make-a-shitpost\">Make your own</Link>\r\n            </div>\r\n          </div>\r\n          :\r\n          <div style={{ textAlign: 'center' }}>\r\n            <img className=\"fidget\" src={Fidget} style={{ display: 'inline', width: '10em', height: '10em' }} alt=\"Fidget spinner loader\" />\r\n            <h1 style={{ color: backgroundColor }}>Loading...</h1>\r\n          </div>}\r\n      </div>\r\n    </ShitpostSpeech>\r\n  </div>);\r\n};","import React, { Component } from 'react';\r\nimport { ShitpostCentral } from './ShitpostJS';\r\nimport FunnyOnes from './ShitpostJS/FunnyOnes';\r\nimport { GColor, idealColorFunction, changeLuminosity } from './utils/colors';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faGithubAlt } from '@fortawesome/free-brands-svg-icons';\r\nimport { rand255 } from './utils/rand255';\r\nimport { ShitpostGold } from \"./components/ShitpostGold\";\r\nimport { DisplayShitpost } from \"./components/DisplayShitpost\";\r\nimport EntityParser from 'he'\r\n\r\nimport './App.css';\r\n\r\nexport class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const preId = props.match.params.id;\r\n    const id = (FunnyOnes.hasOwnProperty(preId)) ? FunnyOnes[preId] : preId;\r\n    const color = new GColor(0, 0, 0);\r\n    this.state = {\r\n      id: id,\r\n      shitpost: '',\r\n      backgroundColor: color\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    if (!this.state.id)\r\n      ShitpostCentral.getRandomRedditShitpost().then(x => this.setState({ \r\n        shitpost: EntityParser.decode(EntityParser.decode(x)) // reddit does a shit job at managing html entities\r\n      }));\r\n    else\r\n      ShitpostCentral.getGlotIoShitpost(this.state.id).then(x => {\r\n        this.setState({ shitpost: x });\r\n      });\r\n    this.setState({ backgroundColor: new GColor(rand255(), rand255(), rand255()) });\r\n  }\r\n  render() {\r\n    const shitpost = this.state.shitpost\r\n    const bgColor = this.state.backgroundColor\r\n    const lighterBg = changeLuminosity(bgColor, 0.7)\r\n    const darkerBg = changeLuminosity(bgColor, -0.6)\r\n    const shitpostBg = idealColorFunction(lighterBg, darkerBg)(bgColor)\r\n    const shitpostColor = idealColorFunction(new GColor(255, 255, 255), new GColor(0, 0, 0))(shitpostBg)\r\n    document.body.style.backgroundColor = bgColor.toCSSColor()\r\n    return (<div>\r\n      <ShitpostGold id={this.props.match.params.id} show={FunnyOnes[this.props.match.params.id]} />\r\n      <DisplayShitpost color={shitpostColor.toCSSColor()} backgroundColor={shitpostBg.toCSSColor()} shitpost={shitpost} />\r\n      <div className=\"social-btns\" style={{ position: 'fixed', bottom: 0, right: 0 }}>\r\n        <a className=\"btn github\" href=\"https://github.com/shitpostloudly/shitpostloudly.github.io\"><FontAwesomeIcon className=\"fa\" icon={faGithubAlt} /></a>\r\n      </div>\r\n    </div>);\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { ShitpostCentral, ShitpostSpeech } from './ShitpostJS';\r\nimport FunnyOnes from './ShitpostJS/FunnyOnes';\r\nimport { GColor, idealColorFunction, changeLuminosity } from './utils/colors';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faGithubAlt } from '@fortawesome/free-brands-svg-icons';\r\nimport { rand255 } from './utils/rand255';\r\nimport { ShitpostGold } from \"./components/ShitpostGold\";\r\nimport { DisplayShitpost } from \"./components/DisplayShitpost\";\r\nimport EntityParser from 'he'\r\n\r\nimport './App.css';\r\n\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const params = props.match.params\r\n    const isFunnies = (FunnyOnes.hasOwnProperty(props.match.url))\r\n    const id = (isFunnies) ? FunnyOnes[props.match.url] : params.id;\r\n    const color = new GColor(0, 0, 0);\r\n    this.state = {\r\n      id: id,\r\n      gold: isFunnies,\r\n      shitpost: '',\r\n      backgroundColor: color\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    if (!this.state.id)\r\n      this.setState({ \r\n        shitpost: 'Random Youtube videos not supported at the moment. This is a great shitpost, right?'\r\n      })\r\n    else\r\n      ShitpostCentral.getYoutubeTranscriptShitpost(this.state.id).then(x => {\r\n        this.setState({ shitpost: EntityParser.decode(x) });\r\n      });\r\n    this.setState({ backgroundColor: new GColor(rand255(), rand255(), rand255()) });\r\n  }\r\n  render() {\r\n    const shitpost = this.state.shitpost\r\n    const bgColor = this.state.backgroundColor\r\n    const lighterBg = changeLuminosity(bgColor, 0.7)\r\n    const darkerBg = changeLuminosity(bgColor, -0.6)\r\n    const shitpostBg = idealColorFunction(lighterBg, darkerBg)(bgColor)\r\n    const shitpostColor = idealColorFunction(new GColor(255, 255, 255), new GColor(0, 0, 0))(shitpostBg)\r\n    document.body.style.backgroundColor = bgColor.toCSSColor()\r\n    return (<div>\r\n      <ShitpostGold show={this.state.gold} />\r\n      <DisplayShitpost color={shitpostColor.toCSSColor()} backgroundColor={shitpostBg.toCSSColor()} shitpost={shitpost} />\r\n      <div className=\"social-btns\" style={{ position: 'fixed', bottom: 0, right: 0 }}>\r\n        <a className=\"btn github\" href=\"https://github.com/shitpostloudly/shitpostloudly.github.io\"><FontAwesomeIcon className=\"fa\" icon={faGithubAlt} /></a>\r\n      </div>\r\n      <ShitpostSpeech shitpost={shitpost} />\r\n    </div>);\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { ShitpostCentral, ShitpostSpeech } from './ShitpostJS';\r\nimport FunnyOnes from './ShitpostJS/FunnyOnes';\r\nimport { GColor, idealColorFunction, changeLuminosity } from './utils/colors';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faGithubAlt } from '@fortawesome/free-brands-svg-icons';\r\nimport { rand255 } from './utils/rand255';\r\nimport { ShitpostGold } from \"./components/ShitpostGold\";\r\nimport { DisplayShitpost } from \"./components/DisplayShitpost\";\r\nimport EntityParser from 'he'\r\n\r\nimport './App.css';\r\n\r\nexport default class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const params = props.match.params\r\n    const isFunnies = (FunnyOnes.hasOwnProperty(props.match.url))\r\n    const id = (isFunnies) ? FunnyOnes[props.match.url].split('/').slice(-2) : [params.subredditId, params.postId];\r\n    const color = new GColor(0, 0, 0);\r\n    this.state = {\r\n      id: id,\r\n      gold: isFunnies,\r\n      shitpost: '',\r\n      backgroundColor: color\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    ShitpostCentral.getVerySpecificRedditShitpost(this.state.id[0], this.state.id[1]).then(x => this.setState({ \r\n      shitpost: EntityParser.decode(EntityParser.decode(x)), // reddit does a shit job at managing html entities\r\n      backgroundColor: new GColor(rand255(), rand255(), rand255())\r\n    }));\r\n  }\r\n  render() {\r\n    const shitpost = this.state.shitpost\r\n    const bgColor = this.state.backgroundColor\r\n    const lighterBg = changeLuminosity(bgColor, 0.7)\r\n    const darkerBg = changeLuminosity(bgColor, -0.6)\r\n    const shitpostBg = idealColorFunction(lighterBg, darkerBg)(bgColor)\r\n    const shitpostColor = idealColorFunction(new GColor(255, 255, 255), new GColor(0, 0, 0))(shitpostBg)\r\n    document.body.style.backgroundColor = bgColor.toCSSColor()\r\n    return (<div>\r\n      <ShitpostGold show={this.state.gold} />\r\n      <DisplayShitpost color={shitpostColor.toCSSColor()} backgroundColor={shitpostBg.toCSSColor()} shitpost={shitpost} />\r\n      <div className=\"social-btns\" style={{ position: 'fixed', bottom: 0, right: 0 }}>\r\n        <a className=\"btn github\" href=\"https://github.com/shitpostloudly/shitpostloudly.github.io\"><FontAwesomeIcon className=\"fa\" icon={faGithubAlt} /></a>\r\n      </div>\r\n      <ShitpostSpeech shitpost={shitpost} />\r\n    </div>);\r\n  }\r\n}","import PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport GoogleAnalytics from 'react-ga';\r\n\r\nexport default class GAListener extends React.Component {\r\n  static contextTypes = {\r\n    router: PropTypes.object\r\n  };\r\n\r\n  componentDidMount() {\r\n    GoogleAnalytics.initialize('UA-125467783-1', { debug: false });\r\n    this.sendPageView(this.context.router.history.location);\r\n    this.context.router.history.listen(this.sendPageView);\r\n  }\r\n\r\n  sendPageView(location) {\r\n    GoogleAnalytics.set({ page: location.pathname+location.search });\r\n    GoogleAnalytics.pageview(location.pathname+location.search);\r\n  }\r\n\r\n  render() {\r\n    return this.props.children;\r\n  }\r\n}","import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\r\n\r\nimport MakeAShitpost from './MakeAShitpost'\r\n\r\nimport { App } from './App';\r\nimport YoutubeApp from './YoutubeApp'\r\nimport RedditApp from './RedditApp'\r\nimport GATracker from './components/GATracker'\r\n\r\nconst RootRouter = () => {\r\n  return (\r\n    <Router>\r\n      <GATracker>\r\n        <Switch>\r\n          <Route path='/r' component={RedditRouter} />\r\n          <Route path='/yt' component={YoutubeRouter} />\r\n          <Route path='/make-a-shitpost' component={MakeAShitpost} />\r\n          <Route path='/:id' component={App} />\r\n          <Route component={App} />\r\n        </Switch>\r\n      </GATracker>\r\n    </Router>\r\n  )\r\n}\r\n\r\nconst RedditRouter = ({ match }) => {\r\n  return (\r\n    <Switch>\r\n      <Route path={`${match.url}/:subredditId/comments/:postId`} component={RedditApp} />\r\n      <Route path={`${match.url}/:subredditId/:postId`} component={RedditApp} />\r\n      <Route path={`${match.url}/:id`} component={RedditApp} />\r\n    </Switch>\r\n  )\r\n}\r\n\r\nconst YoutubeRouter = ({ match }) => {\r\n  return (\r\n  <Switch>\r\n    <Route exact path={`${match.url}/:id`} component={YoutubeApp} />\r\n    <Route exact path={`${match.url}/`} component={YoutubeApp} />\r\n  </Switch>\r\n  )\r\n}\r\n\r\nexport default RootRouter;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport RouteRoute from './RootRoute';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<RouteRoute />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}