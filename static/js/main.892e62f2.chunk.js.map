{"version":3,"sources":["components/fidget.svg","ShitpostJS/xml-parser.js","ShitpostJS/shitpost.js","ShitpostJS/ShitpostSayer.js","ShitpostJS/index.js","utils/rand255.js","utils/colors.js","MakeAShitpost.js","ShitpostJS/FunnyOnes.js","components/ShitpostGold.js","components/DisplayShitpost.js","App.js","YoutubeApp.js","RedditApp.js","components/GATracker.js","RootRoute.js","registerServiceWorker.js","index.js"],"names":["module","exports","xmlToJson","xml","obj","nodeType","attributes","length","j","attribute","item","nodeName","nodeValue","hasChildNodes","childNodes","i","push","old","ShitpostJS","submitToPastebin","devKey","text","a","formData","FormData","append","maxTries","fetch","method","body","resp","url","timeout","status","getPastebinShitpost","id","unescape","classicShitpost","submitToGlotIo","data","language","title","public","files","name","content","headers","JSON","stringify","Error","json","getGlotIoShitpost","error","getRandomRedditShitpost","map","multiPartFile","join","replace","trim","children","Math","floor","random","getVerySpecificRedditShitpost","subredditId","postId","getYoutubeTranscriptShitpost","videoId","lang","DOMParser","parseFromString","textArr","x","getEmotionOfShitpost","ms","Promise","res","setTimeout","speechUtteranceChunker","utt","settings","callback","window","SpeechSynthesisUtterance","chunkLength","pattRegex","RegExp","chunkArr","undefined","offset","substring","match","chunk","newUtt","hasOwnProperty","onend","TEMP_UTT","speechSynthesis","speak","ShitpostSayer","props","fallback","state","Utterance","Synth","MeSpeak","isVoiceLoaded","loadVoice","require","isConfigLoaded","loadConfig","volume","onstart","utterance","amplitude","pitch","speed","variant","cancel","stop","addEventListener","onbeforeunload","this","preShitpost","shitpost","emojiRegex","rate","min","max","split","francDetection","langs","where","franc","getVoices","filter","indexOf","success","guessLanguage","detect","code","Component","defaultProps","ShitpostCentral","central","ShitpostSpeech","speech","rand255","GColor","r","g","b","idealColorFunction","lightColor","darkColor","background","c","col","pow","changeLuminosity","color","percent","t","p","round","textAreaStyle","resize","boxSizing","width","padding","height","minHeight","fontSize","borderColor","borderRadius","borderTopLeftRadius","borderBottomRightRadius","margin","outline","RoundedSubmitButton","disabled","invertedColor","onClick","className","style","marginTop","backgroundColor","recaptchaRef","React","createRef","MemeMaker","textChange","setState","submit","then","disableTextArea","validateAndSubmit","current","execute","bgColor","document","toCSSColor","linkStyle","textAlign","to","placeholder","onChange","e","target","value","ref","size","sitekey","funnies","ShitpostGold","show","DisplayShitpost","preStyle","whiteSpace","wordWrap","borderTopColor","borderTopWidth","borderTopStyle","paddingTop","src","Fidget","display","alt","App","preId","params","FunnyOnes","EntityParser","decode","lighterBg","darkerBg","shitpostBg","shitpostColor","position","bottom","right","href","icon","faGithubAlt","isFunnies","gold","slice","GAListener","history","GoogleAnalytics","initialize","debug","sendPageView","location","listen","set","page","pathname","search","pageview","withRouter","RedditRouter","path","component","RedditApp","YoutubeRouter","exact","YoutubeApp","RootRouter","GATracker","MakeAShitpost","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","ReactDOM","render","getElementById","URL","process","origin","response","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.892e62f2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/fidget.e9f2330a.svg\";","export default function xmlToJson(xml) {\n\n\t// Create the return object\n\tvar obj = {};\n\tif (xml.nodeType === 1) { // element\n\t\t// do attributes\n\t\tif (xml.attributes.length > 0) {\n\t\tobj[\"@attributes\"] = {};\n\t\t\tfor (var j = 0; j < xml.attributes.length; j++) {\n\t\t\t\tvar attribute = xml.attributes.item(j);\n\t\t\t\tobj[\"@attributes\"][attribute.nodeName] = attribute.nodeValue;\n\t\t\t}\n\t\t}\n\t} else if (xml.nodeType === 3) { // text\n\t\tobj = xml.nodeValue;\n\t}\n\n\t// do children\n\t// If just one text node inside\n\tif (xml.hasChildNodes() && xml.childNodes.length === 1 && xml.childNodes[0].nodeType === 3) {\n\t\tobj = xml.childNodes[0].nodeValue;\n\t}\n\telse if (xml.hasChildNodes()) {\n\t\tfor(var i = 0; i < xml.childNodes.length; i++) {\n\t\t\tvar item = xml.childNodes.item(i);\n\t\t\tvar nodeName = item.nodeName;\n\t\t\tif (typeof(obj[nodeName]) === \"undefined\") {\n\t\t\t\tobj[nodeName] = xmlToJson(item);\n\t\t\t} else {\n\t\t\t\tif (typeof(obj[nodeName].push) === \"undefined\") {\n\t\t\t\t\tvar old = obj[nodeName];\n\t\t\t\t\tobj[nodeName] = [];\n\t\t\t\t\tobj[nodeName].push(old);\n\t\t\t\t}\n\t\t\t\tobj[nodeName].push(xmlToJson(item));\n\t\t\t}\n\t\t}\n\t}\n\treturn obj;\n}","import xmlToJson from './xml-parser'\n\n/**\n * Shitpost.JS shitpost framework (omegaLUL)\n * Fuck Pastebin lmao\n */\nconst ShitpostJS = {\n  /**\n   * Deprecated because fuck pastebin\n   */\n  submitToPastebin: async (devKey, text) => {\n    if (!devKey || !text) return\n    let formData = new FormData();\n    formData.append('api_option', 'paste');\n    formData.append('api_dev_key', devKey);\n    formData.append('api_paste_private', 1)\n    formData.append('api_paste_code', text);\n    let maxTries = 3\n    do {\n      var resp = await fetch(\"https://cors-anywhere.herokuapp.com/https://pastebin.com/api/api_post.php\", {\n        method: 'POST',\n        body: formData\n      })\n      var url = await resp.text()\n      await timeout(500)\n    } while (resp.status !== 200 && (maxTries--) > 0)\n    return url\n  },\n  /**\n   * Deprecated because fuck pastebin\n   */\n  getPastebinShitpost: async (id) => {\n    if (!id) return unescape(classicShitpost)\n    const resp = await fetch(`https://cors.io/?https://pastebin.com/raw/${id}`)\n    const text = await resp.text()\n    if (resp.status !== 200) return unescape(classicShitpost)\n    return text\n  },\n  submitToGlotIo: async (text) => {\n    if (!text) return\n    const data = {\n      language: 'plaintext',\n      title: 'Loud Shitpost',\n      public: false,\n      files: [{\n        name: \"main.txt\",\n        content: `${text}`\n      }]\n    }\n    const resp = await fetch(\"https://snippets.glot.io/snippets\", {\n      headers: {\n        'Content-Type': 'application/json',\n        'Accept': 'application/json'\n      },\n      method: 'POST',\n      body: JSON.stringify(data)\n    })\n    if (resp.status !== 200) throw new Error(\"Glot.io's API might have changed. Please notify me :)\")\n    return (await resp.json()).id\n  },\n  getGlotIoShitpost: async (id) => {\n    const error = async (status) => {\n      return `${status} Your code failed. \\n\\n${await ShitpostJS.getRandomRedditShitpost()}`\n    }\n    try {\n      var resp = await fetch(`https://snippets.glot.io/snippets/${id}`)\n      var json = await resp.json()\n    } catch (e) { return await error(404) }\n    if (!json || !json.files) return await error(404)\n    return json.files.map(multiPartFile => multiPartFile.content).join('\\n').replace(/\\./g,'. ').replace(/\\s+/g, ' ').trim()\n  },\n  getRandomRedditShitpost: async (id) => {\n    const resp = await (await fetch(\"https://www.reddit.com/r/copypasta/.json\")).json()\n    const children = resp.data.children\n    do {\n      var text = children[Math.floor(Math.random() * children.length)][\"data\"][\"selftext\"]\n    } while (!text || text.replace(/\\s/g,'').length === 0)\n    return text.replace(/\\./g,'. ').replace(/\\s+/g, ' ').trim()\n  },\n  getVerySpecificRedditShitpost: async (subredditId='', postId='') => {\n    const error = async (status) => {\n      return `${status} Couldn't get Reddit post. \\n\\n${await ShitpostJS.getRandomRedditShitpost()}`\n    }\n    if (!(subredditId && postId)) return await error(404)\n    const resp = await fetch(`https://www.reddit.com/r/${subredditId}/${postId}/.json`)\n    const json = await resp.json()\n    if (resp.status !== 200) return await error(resp.status)\n    const children = json[0].data.children\n    const text = children[0][\"data\"][\"selftext\"]\n    return text.replace(/\\./g,'. ').replace(/\\s+/g, ' ').trim()\n  },\n  getYoutubeTranscriptShitpost: async (videoId, lang='en') => {\n    const error = async () => {\n      return `Sorry, couldn't get your Youtube shitpost. No transcript found probably. \\n\\n${await ShitpostJS.getRandomRedditShitpost()}`\n    }\n    const resp = await (await fetch(`https://video.google.com/timedtext?lang=${lang}&v=${videoId}`)).text()\n    const json = xmlToJson((new DOMParser()).parseFromString(resp, 'text/xml')) // hahaha the inefficiency but does it look like I care?\n    const textArr = (json['transcript']) ? json['transcript']['text'] : ''\n    if (!textArr) return await error()\n    return (textArr) ? textArr.map(x => x.replace(/\\./g,'. ').replace(/\\s+/g, ' ')).join(' ') : ''\n  },\n  /**\n   * Some novel ass technique that I fucking bullshitted in 4 hours (lmao undergrad projects)\n   * Disabled for now because I forgot to fucking cache the results.\n   */\n  getEmotionOfShitpost: async (text) => {\n    return\n    // try {\n    //   const json = await(await fetch(\"\", {\n    //     method: 'POST',\n    //     body: JSON.stringify({\n    //       text: text\n    //     })\n    //   })).json()\n    //   return json.documents[0].score\n    // } catch (e) { return `${e}` }\n  }\n}\n\nconst timeout = ms => new Promise(res => setTimeout(res, ms))\n\n/**\n * I've included a classic shitpost as a default\n */\nexport const classicShitpost = \"Not%20only%20is%20finding%20the%20global%20optimum%20of%20a%20path%20given%20elevation%20data%20online%20illegal%2C%20online%20forums%20often%20come%20with%20%u201Cbonus%u201D%20features%20in%20the%20form%20of%20nasty%20plagiarized%20code%20and%20academic%20integrity%20violations.%20Stay%20legal%20and%20stay%20safe%2C%20code%20it%20yourself%20or%20if%20you%20don%u2019t%20want%20to%20pay%20for%20tutors%20just%20get%20good%2C%20which%20is%20mostly%20compatible%20and%20also%20requires%20you%20to%20understand%20the%20code.%20Remember%20that%20there%20are%20cheaper%20alternatives%20like%20a%20Bachelors%20of%20Science%20which%20is%20an%20awesome%20deal%20as%20a%20commercially%20made%20Engineering%20degree%20can%20cost%20tens%20of%20thousands%20of%20dollars.\"\n\nexport default ShitpostJS","import { Component } from 'react'\nimport PropType from 'prop-types'\nimport MeSpeak from 'mespeak'\nimport franc from 'franc-min'\nimport { guessLanguage } from 'guesslanguage'\nimport langs from 'langs'\nimport emojiRegex from 'emoji-regex'\n\n/**\n * Fuck y'all mojis, they take too long to speak\n * @param {string} input\n */\nconst emojiStripper = (input) => {\n  return input.replace(emojiRegex(), '')\n};\n\nconst speechUtteranceChunker = function (utt, settings, callback) {\n  if (!(utt instanceof window.SpeechSynthesisUtterance)) { callback(false); return; }\n  settings = settings || {};\n  var chunkLength = (settings && settings.chunkLength) ? settings.chunkLength : 160;\n  var pattRegex = new RegExp('^.{' + Math.floor(chunkLength / 2) + ',' + chunkLength + '}[.!?,]{1}|^.{1,' + chunkLength + '}$|^.{1,' + chunkLength + '} ');\n  var txt = (settings && settings.offset !== undefined ? utt.text.substring(settings.offset) : utt.text);\n  var chunkArr = txt.match(pattRegex);\n\n  if (chunkArr && chunkArr[0] !== undefined && chunkArr[0].length > 2) {\n      var chunk = chunkArr[0];\n      var newUtt = new SpeechSynthesisUtterance(chunk.replace(/^\\./,''));\n      // This is correct scoping. eslint is just going nuts. Don't worry.\n      // eslint-disable-next-line no-unused-vars\n      for (let x in utt) {\n        newUtt[\"lang\"] = utt[\"lang\"]\n        if (utt.hasOwnProperty(x) && x !== 'text') {\n            newUtt[x] = utt[x];\n        }\n      }\n      newUtt.onend = function () {\n          settings.offset = settings.offset || 0;\n          settings.offset += chunk.length - 1;\n          speechUtteranceChunker(utt, settings, callback);\n      }\n      window.TEMP_UTT= newUtt; //IMPORTANT!! Do not remove: Logging the object out fixes some onend firing issues.\n      //placing the speak invocation inside a callback fixes ordering and onend issues.\n      setTimeout(function () {\n          speechSynthesis.speak(newUtt);\n      }, 0);\n  } else {\n      //call once all text has been spoken...\n      if (callback !== undefined) {\n          callback(true);\n      }\n  }\n}\n\nexport default class ShitpostSayer extends Component {\n  constructor(props) {\n    super(props)\n    if (window.speechSynthesis && window.SpeechSynthesisUtterance && !props.fallback) {\n      this.state = {\n        Utterance: window.SpeechSynthesisUtterance,\n        Synth: window.speechSynthesis\n      }\n    } else {\n      if (!MeSpeak.isVoiceLoaded('en')) MeSpeak.loadVoice(require('mespeak/voices/en/en-us.json'))\n      if (!MeSpeak.isConfigLoaded()) MeSpeak.loadConfig(require('./mespeak_config.json'))\n      this.state = {\n        Utterance: function (text) {\n          return {\n              lang: 'en',\n              volume: 1.0,\n              onend: function () {},\n              onstart: function () {},\n              text: text\n          };\n        },\n        Synth: {\n          speak: (utterance) => {\n            MeSpeak.speak(utterance.text, { amplitude: 100, pitch: 50, speed: 175, variant: 'klatt' })\n          },\n          cancel: () => {\n            MeSpeak.stop();\n          }\n        }\n      }\n    }\n  }\n  componentDidMount() {\n    if (!window.addEventListener) {\n      window.onbeforeunload = function() {\n        window.speechSynthesis.cancel();\n      }\n    } else {\n      window.addEventListener(\"beforeunload\", function() {\n        window.speechSynthesis.cancel()\n      })\n    }\n  }\n  componentDidUpdate() {\n    const Synth = this.state.Synth\n    const Utterance = this.state.Utterance\n    if (!(Synth && Utterance)) return\n    Synth.cancel()\n    let preShitpost = (this.props.shitpost) ? emojiStripper(this.props.shitpost) : ''\n    let rate = Math.min(1.5, Math.max(1, preShitpost.split(' ').length/200))\n    //preShitpost = preShitpost.replace(\"\\\"\", \"\").split(/[)(.;](\\s+)/g).filter(x => x);\n    //preShitpost.forEach(shitpost => {\n    let shitpost = (preShitpost) ? preShitpost : 'hi'\n    const utterance = new Utterance(shitpost)\n    utterance.rate = rate\n    const francDetection = langs.where(\"3\", franc(shitpost))\n    if (francDetection) {\n      utterance.lang = Synth.getVoices().filter(x => x.lang.indexOf(francDetection[\"1\"]) !== -1).map(x => x.lang)[0]\n      speechUtteranceChunker(utterance, {}, (success) => {\n        if (!success) Synth.speak(utterance)\n      })\n    } else {\n      guessLanguage.detect(shitpost, (code) => {\n        utterance.lang = Synth.getVoices().filter(x => x.lang.indexOf(code) !== -1).map(x => x.lang)[0]\n        speechUtteranceChunker(utterance, {}, (success) => {\n          if (!success) Synth.speak(utterance)\n        })\n      })\n    }\n    //})\n  }\n  render() {\n    return null\n  }\n}\nShitpostSayer.defaultProps = {\n  shitpost: '',\n  fallback: false,\n}\nShitpostSayer.propTypes = {\n  shitpost: PropType.string,\n  fallback: PropType.bool,\n}","import central from './shitpost'\nimport speech from './ShitpostSayer'\n\nconst ShitpostAPI = {\n  ShitpostSpeech: speech,\n  ShitpostCentral: central\n}\nexport const ShitpostCentral = central\nexport const ShitpostSpeech = speech\nexport default ShitpostAPI","export const rand255 = () => Math.floor(Math.random() * 256);","// export const GColor = function(r,g,b) {\n//   return {r:r, g:g, b:b};\n// };\nexport class GColor {\n  constructor(r,g,b) {\n    this.r = (typeof r === 'undefined')?0:r;\n    this.g = (typeof g === 'undefined')?0:g;\n    this.b = (typeof b === 'undefined')?0:b;\n  }\n  toCSSColor() {\n    return `rgb(${this.r}, ${this.g}, ${this.b})`\n  }\n}\nexport const createColorRange = function(c1, c2) {\n  var colorList = [], tmpColor;\n  for (var i=0; i<255; i++) {\n      tmpColor = new GColor();\n      tmpColor.r = c1.r + ((i*(c2.r-c1.r))/255);\n      tmpColor.g = c1.g + ((i*(c2.g-c1.g))/255);\n      tmpColor.b = c1.b + ((i*(c2.b-c1.b))/255);\n      colorList.push(tmpColor);\n  }\n  return colorList;\n}\n/**\n * W3C recommendations light VS dark function\n * I fucking love curry\n * @param {GColor} lightColor \n * @param {GColor} darkColor\n */\nexport const idealColorFunction = (lightColor, darkColor) => (background) => {\n  let {r,g,b} = background;\n  let uicolors = [r / 255, g / 255, b / 255];\n  let c = uicolors.map((col) => {\n    if (col <= 0.03928) {\n      return col / 12.92;\n    }\n    return Math.pow((col + 0.055) / 1.055, 2.4);\n  });\n  let L = (0.2126 * c[0]) + (0.7152 * c[1]) + (0.0722 * c[2]);\n  return (L > 0.179) ? darkColor : lightColor;\n}\nexport const changeLuminosity = (color, percent) => {\n  const {r,g,b}=color,t=percent<0?0:255,p=percent<0?percent*-1:percent;\n  return new GColor(Math.round((t-r)*p)+r,Math.round((t-g)*p)+g,Math.round((t-b)*p)+b);\n}","import React, { Component } from 'react';\nimport { ShitpostCentral } from './ShitpostJS'\nimport { Link } from 'react-router-dom'\nimport { rand255 } from \"./utils/rand255\";\nimport { GColor, idealColorFunction, changeLuminosity } from './utils/colors'\nimport { ShitpostSpeech } from './ShitpostJS'\nimport ReCAPTCHA from 'react-google-recaptcha'\n\nimport './App.css';\nimport './RoundedSubmitButton.css'\n\nconst textAreaStyle = {\n  resize: 'vertical',\n  boxSizing: 'border-box',\n  width: '100%',\n  padding: 10,\n  height: 200,\n  minHeight: 200,\n  fontSize: 16,\n  borderColor: '#aaa',\n  borderRadius: 20,\n  borderTopLeftRadius: 0,\n  borderBottomRightRadius: 0,\n  margin: 0,\n  outline: 0\n}\n\nconst RoundedSubmitButton = ({ disabled, color='black', invertedColor='white', onClick=()=>{} }) => {\n  return (\n    <button\n    disabled={disabled}\n    className=\"RoundedSubmitButton\"\n    style={{ marginTop: 5, color: invertedColor, backgroundColor: color, borderColor: color }}\n    onClick={onClick}>Submit</button>\n  )\n}\n\nconst reCAPTCHAKey = '6LeFDHEUAAAAAAlVeMaEwP1epvbYaqx5aSk6EWUv'\n\nconst recaptchaRef = React.createRef();\n\nexport default class MemeMaker extends Component {\n  constructor() {\n    super()\n    const color = new GColor(0, 0, 0)\n    this.state = {\n      text: '',\n      url: '',\n      backgroundColor: color,\n      disableTextArea: false\n    }\n  }\n\n  componentDidMount() {\n    window.speechSynthesis && window.speechSynthesis.cancel()\n    let color = new GColor(rand255(), rand255(), rand255())\n    this.setState({ backgroundColor: color })\n  }\n\n  textChange = (text) => {\n    this.setState({ text: text })\n  }\n  \n  submit = () => {\n    ShitpostCentral.submitToGlotIo(this.state.text).then(x => {\n      if (!x) return\n      this.setState({ url: '/' + x, disableTextArea: true })\n    })\n  }\n\n  validateAndSubmit = () => {\n    const text = this.state.text\n    // need to add support for reddit and youtube URLs in future\n    if (!text || !text.trim()) return\n    recaptchaRef.current.execute()\n  }\n\n  render() {\n    const bgColor = this.state.backgroundColor\n    const color = changeLuminosity(bgColor, -0.4)\n    document.body.style.backgroundColor = bgColor.toCSSColor()\n    const invertedColor = idealColorFunction(new GColor(255, 255, 255), color)(bgColor)\n    const linkStyle = {\n      fontSize: '1.4em',\n      color: color.toCSSColor(),\n      width: '100%'\n    }    \n    return (\n      <div className=\"ShitpostContainer\">\n        <div className=\"ShitpostCentre\" style={{ textAlign: 'center' }}>\n          <div style={{ borderRadius: 15, padding: '25px 40px', backgroundColor: '#eee' }}>\n            <div style={{ textAlign: 'left' }}><Link style={linkStyle} to=\"/\">&lt; Back to Shitposts</Link></div>\n            <h1 style={{ color: bgColor.toCSSColor() }}>Generate some fucking shitposts</h1>\n            <textarea disabled={this.state.disableTextArea} style={textAreaStyle} placeholder=\"YOUR SHITPOST HERE\" onChange={(e) => this.textChange(e.target.value)} />\n            <ReCAPTCHA\n              ref={recaptchaRef}\n              size=\"invisible\"\n              sitekey={reCAPTCHAKey}\n              onChange={this.submit}\n            />\n            <RoundedSubmitButton disabled={this.state.disableTextArea} color={bgColor.toCSSColor()} invertedColor={invertedColor.toCSSColor()} onClick={this.validateAndSubmit} />\n            {(this.state.url) ? <div style={{ padding: 10 }}><Link style={linkStyle} to={this.state.url}>Here's your link!</Link></div> : <div></div>}\n          </div>\n        </div>\n        <ShitpostSpeech />\n      </div>\n    )\n  }\n}","/**\n * A collection of funnies, by me\n */\nconst funnies = {\n  'software': 'f4kd2xgdy7',\n  'software-response': 'f4kdx6sp8b',\n  'reddit1': 'f4ke6f08ou',\n  'terran': 'f4kmkyen9a',\n  'unfortunately': 'f4o11lb97a',\n  'confession': 'f4vb5pgsbp',\n  '/r/druid': 'hearthstonecirclejerk/9h1o9j',\n  '/yt/vsauce': 'L45Q1_psDqk'\n}\nexport default funnies","import React from 'react';\n/**\n * Shitpost Gold banner\n * @param { id } ID a matching identifier\n */\nexport const ShitpostGold = ({ id, show=false }) => {\n  if (show)\n    return (<span className=\"corner-banner\"><span>Shitpost Gold&trade; certified</span></span>);\n  else\n    return null;\n};","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Fidget from './fidget.svg';\nimport './fidget.css';\n\nexport const DisplayShitpost = ({ color = 'black', backgroundColor='#eee', shitpost = '' }) => {\n  const preStyle = { color: color, fontSize: '2em', margin: 0, whiteSpace: 'pre-wrap', wordWrap: 'break-word' };\n  const linkStyle = { color: color, fontSize: '1.5em', margin: 0 };\n  return (<div className=\"ShitpostContainer\">\n    <div className=\"ShitpostCentre\">\n      {(shitpost) ?\n        <div style={{ borderRadius: 15, padding: '25px 40px', backgroundColor: backgroundColor }}>\n          <pre style={preStyle} id=\"content\">{shitpost}</pre>\n          <div style={{ textAlign: 'center', marginTop: 20, borderTopColor: color, borderTopWidth: 1, borderTopStyle: 'solid', paddingTop: 10 }}>\n            <Link style={linkStyle} to=\"/make-a-shitpost\">Make your own</Link>\n          </div>\n        </div>\n        :\n        <div style={{ textAlign: 'center' }}>\n          <img className=\"fidget\" src={Fidget} style={{ display: 'inline', width: '10em', height: '10em' }} alt=\"Fidget spinner loader\" />\n          <h1 style={{ color: backgroundColor }}>Loading...</h1>\n        </div>}\n    </div>\n  </div>);\n};","import React, { Component } from 'react';\nimport { ShitpostCentral, ShitpostSpeech } from './ShitpostJS';\nimport FunnyOnes from './ShitpostJS/FunnyOnes';\nimport { GColor, idealColorFunction, changeLuminosity } from './utils/colors';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faGithubAlt } from '@fortawesome/free-brands-svg-icons';\nimport { rand255 } from './utils/rand255';\nimport { ShitpostGold } from \"./components/ShitpostGold\";\nimport { DisplayShitpost } from \"./components/DisplayShitpost\";\nimport EntityParser from 'he'\n\nimport './App.css';\n\nexport class App extends Component {\n  constructor(props) {\n    super(props);\n    const preId = props.match.params.id;\n    const id = (FunnyOnes.hasOwnProperty(preId)) ? FunnyOnes[preId] : preId;\n    const color = new GColor(0, 0, 0);\n    this.state = {\n      id: id,\n      shitpost: '',\n      backgroundColor: color\n    };\n  }\n  componentDidMount() {\n    if (!this.state.id)\n      ShitpostCentral.getRandomRedditShitpost().then(x => this.setState({ \n        shitpost: EntityParser.decode(EntityParser.decode(x)) // reddit does a shit job at managing html entities\n      }));\n    else\n      ShitpostCentral.getGlotIoShitpost(this.state.id).then(x => {\n        this.setState({ shitpost: x });\n      });\n    this.setState({ backgroundColor: new GColor(rand255(), rand255(), rand255()) });\n  }\n  render() {\n    const shitpost = this.state.shitpost\n    const bgColor = this.state.backgroundColor\n    const lighterBg = changeLuminosity(bgColor, 0.7)\n    const darkerBg = changeLuminosity(bgColor, -0.6)\n    const shitpostBg = idealColorFunction(lighterBg, darkerBg)(bgColor)\n    const shitpostColor = idealColorFunction(new GColor(255, 255, 255), new GColor(0, 0, 0))(shitpostBg)\n    document.body.style.backgroundColor = bgColor.toCSSColor()\n    return (<div>\n      <ShitpostGold id={this.props.match.params.id} show={FunnyOnes[this.props.match.params.id]} />\n      <DisplayShitpost color={shitpostColor.toCSSColor()} backgroundColor={shitpostBg.toCSSColor()} shitpost={shitpost} />\n      <div className=\"social-btns\" style={{ position: 'fixed', bottom: 0, right: 0 }}>\n        <a className=\"btn github\" href=\"https://github.com/shitpostloudly/shitpostloudly.github.io\"><FontAwesomeIcon className=\"fa\" icon={faGithubAlt} /></a>\n      </div>\n      <ShitpostSpeech shitpost={shitpost} />\n    </div>);\n  }\n}","import React, { Component } from 'react';\nimport { ShitpostCentral, ShitpostSpeech } from './ShitpostJS';\nimport FunnyOnes from './ShitpostJS/FunnyOnes';\nimport { GColor, idealColorFunction, changeLuminosity } from './utils/colors';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faGithubAlt } from '@fortawesome/free-brands-svg-icons';\nimport { rand255 } from './utils/rand255';\nimport { ShitpostGold } from \"./components/ShitpostGold\";\nimport { DisplayShitpost } from \"./components/DisplayShitpost\";\nimport EntityParser from 'he'\n\nimport './App.css';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    const params = props.match.params\n    const isFunnies = (FunnyOnes.hasOwnProperty(props.match.url))\n    const id = (isFunnies) ? FunnyOnes[props.match.url] : params.id;\n    const color = new GColor(0, 0, 0);\n    this.state = {\n      id: id,\n      gold: isFunnies,\n      shitpost: '',\n      backgroundColor: color\n    };\n  }\n  componentDidMount() {\n    if (!this.state.id)\n      this.setState({ \n        shitpost: 'Random Youtube videos not supported at the moment. This is a great shitpost, right?'\n      })\n    else\n      ShitpostCentral.getYoutubeTranscriptShitpost(this.state.id).then(x => {\n        this.setState({ shitpost: EntityParser.decode(x) });\n      });\n    this.setState({ backgroundColor: new GColor(rand255(), rand255(), rand255()) });\n  }\n  render() {\n    const shitpost = this.state.shitpost\n    const bgColor = this.state.backgroundColor\n    const lighterBg = changeLuminosity(bgColor, 0.7)\n    const darkerBg = changeLuminosity(bgColor, -0.6)\n    const shitpostBg = idealColorFunction(lighterBg, darkerBg)(bgColor)\n    const shitpostColor = idealColorFunction(new GColor(255, 255, 255), new GColor(0, 0, 0))(shitpostBg)\n    document.body.style.backgroundColor = bgColor.toCSSColor()\n    return (<div>\n      <ShitpostGold show={this.state.gold} />\n      <DisplayShitpost color={shitpostColor.toCSSColor()} backgroundColor={shitpostBg.toCSSColor()} shitpost={shitpost} />\n      <div className=\"social-btns\" style={{ position: 'fixed', bottom: 0, right: 0 }}>\n        <a className=\"btn github\" href=\"https://github.com/shitpostloudly/shitpostloudly.github.io\"><FontAwesomeIcon className=\"fa\" icon={faGithubAlt} /></a>\n      </div>\n      <ShitpostSpeech shitpost={shitpost} />\n    </div>);\n  }\n}","import React, { Component } from 'react';\nimport { ShitpostCentral, ShitpostSpeech } from './ShitpostJS';\nimport FunnyOnes from './ShitpostJS/FunnyOnes';\nimport { GColor, idealColorFunction, changeLuminosity } from './utils/colors';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faGithubAlt } from '@fortawesome/free-brands-svg-icons';\nimport { rand255 } from './utils/rand255';\nimport { ShitpostGold } from \"./components/ShitpostGold\";\nimport { DisplayShitpost } from \"./components/DisplayShitpost\";\nimport EntityParser from 'he'\n\nimport './App.css';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n    const params = props.match.params\n    const isFunnies = (FunnyOnes.hasOwnProperty(props.match.url))\n    const id = (isFunnies) ? FunnyOnes[props.match.url].split('/').slice(-2) : [params.subredditId, params.postId];\n    const color = new GColor(0, 0, 0);\n    this.state = {\n      id: id,\n      gold: isFunnies,\n      shitpost: '',\n      backgroundColor: color\n    };\n  }\n  componentDidMount() {\n    ShitpostCentral.getVerySpecificRedditShitpost(this.state.id[0], this.state.id[1]).then(x => this.setState({ \n      shitpost: EntityParser.decode(EntityParser.decode(x)), // reddit does a shit job at managing html entities\n      backgroundColor: new GColor(rand255(), rand255(), rand255())\n    }));\n  }\n  render() {\n    const shitpost = this.state.shitpost\n    const bgColor = this.state.backgroundColor\n    const lighterBg = changeLuminosity(bgColor, 0.7)\n    const darkerBg = changeLuminosity(bgColor, -0.6)\n    const shitpostBg = idealColorFunction(lighterBg, darkerBg)(bgColor)\n    const shitpostColor = idealColorFunction(new GColor(255, 255, 255), new GColor(0, 0, 0))(shitpostBg)\n    document.body.style.backgroundColor = bgColor.toCSSColor()\n    return (<div>\n      <ShitpostGold show={this.state.gold} />\n      <DisplayShitpost color={shitpostColor.toCSSColor()} backgroundColor={shitpostBg.toCSSColor()} shitpost={shitpost} />\n      <div className=\"social-btns\" style={{ position: 'fixed', bottom: 0, right: 0 }}>\n        <a className=\"btn github\" href=\"https://github.com/shitpostloudly/shitpostloudly.github.io\"><FontAwesomeIcon className=\"fa\" icon={faGithubAlt} /></a>\n      </div>\n      <ShitpostSpeech shitpost={shitpost} />\n    </div>);\n  }\n}","import PropTypes from 'prop-types';\nimport React from 'react';\nimport GoogleAnalytics from 'react-ga';\nimport { withRouter } from 'react-router';\n\nclass GAListener extends React.Component {\n  static propTypes = {\n    match: PropTypes.object.isRequired,\n    location: PropTypes.object.isRequired,\n    history: PropTypes.object.isRequired\n  };\n\n  componentDidMount() {\n    const { history } = this.props;\n    GoogleAnalytics.initialize('UA-125467783-1', { debug: false });\n    this.sendPageView(history.location);\n    history.listen(this.sendPageView);\n  }\n\n  sendPageView(location) {\n    GoogleAnalytics.set({ page: location.pathname+location.search });\n    GoogleAnalytics.pageview(location.pathname+location.search);\n  }\n\n  render() {\n    return this.props.children;\n  }\n}\n\nexport default withRouter(GAListener);","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\n\nimport MakeAShitpost from './MakeAShitpost'\n\nimport { App } from './App';\nimport YoutubeApp from './YoutubeApp'\nimport RedditApp from './RedditApp'\nimport GATracker from './components/GATracker'\n\nconst RootRouter = () => {\n  return (\n    <Router>\n      <GATracker>\n        <Switch>\n          <Route path='/r' component={RedditRouter} />\n          <Route path='/yt' component={YoutubeRouter} />\n          <Route path='/make-a-shitpost' component={MakeAShitpost} />\n          <Route path='/:id' component={App} />\n          <Route component={App} />\n        </Switch>\n      </GATracker>\n    </Router>\n  )\n}\n\nconst RedditRouter = ({ match }) => {\n  return (\n    <Switch>\n      <Route path={`${match.url}/:subredditId/comments/:postId`} component={RedditApp} />\n      <Route path={`${match.url}/:subredditId/:postId`} component={RedditApp} />\n      <Route path={`${match.url}/:id`} component={RedditApp} />\n    </Switch>\n  )\n}\n\nconst YoutubeRouter = ({ match }) => {\n  return (\n  <Switch>\n    <Route exact path={`${match.url}/:id`} component={YoutubeApp} />\n    <Route exact path={`${match.url}/`} component={YoutubeApp} />\n  </Switch>\n  )\n}\n\nexport default RootRouter;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport RouteRoute from './RootRoute';\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(<RouteRoute />, document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}